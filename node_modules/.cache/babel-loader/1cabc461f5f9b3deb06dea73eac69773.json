{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/components/FormFields.js\";\nimport React from \"react\";\nexport function Input(props) {\n  var options = [];\n\n  if (props.options && props.list) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.options), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var option = _step.value;\n        options.push(React.createElement(\"option\", {\n          value: option.value,\n          key: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 5\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: props.cssClass || null,\n    type: props.type,\n    placeholder: props.placeholder || null,\n    name: props.name || null,\n    onBlur: props.blur || null,\n    onFocus: props.focus || null,\n    onChange: props.change || null,\n    list: props.list || null,\n    id: props.id || null,\n    defaultValue: props.value,\n    disabled: props.disabled || null,\n    readOnly: props.readonly || null,\n    autoComplete: props.autocomplete || \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), options.length > 0 && React.createElement(\"datalist\", {\n    id: props.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, options)));\n}\nexport function Select(props) {\n  var options = [];\n\n  if (props.options.length) {\n    options.push(React.createElement(\"option\", {\n      key: \"-1\",\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Select an option \"));\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = _getIterator(props.options), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var option = _step2.value;\n        options.push(React.createElement(\"option\", {\n          value: option.value,\n          key: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \" \", option.name, \" \"));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: props.name || null,\n      id: props.id || null,\n      value: props.value || \"\",\n      onChange: props.change || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, options))));\n  }\n\n  return null;\n}\nexport function TextArea(props) {\n  return React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"textarea\",\n    placeholder: props.placeholder || null,\n    onChange: props.change || null,\n    onBlur: props.blur || null,\n    name: props.name || null,\n    id: props.id || null,\n    value: props.value || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\nexport function CheckBox(props) {\n  return React.createElement(\"label\", {\n    className: props.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: props.type,\n    name: props.name || null,\n    defaultChecked: props.checked || null,\n    id: props.id || null,\n    disabled: props.disabled || null,\n    onChange: props.change || null,\n    onClick: props.click || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"\\xA0 \", props.placeholder);\n}\nexport function Button(props) {\n  return React.createElement(\"button\", {\n    type: props.type,\n    className: props.cssClass || null,\n    title: props.title,\n    onClick: props.click || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.text);\n}\nexport function FileInput(props) {\n  return React.createElement(\"div\", {\n    className: \"file is-link has-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"file-input\",\n    type: \"file\",\n    name: props.name,\n    id: props.id || props.name,\n    onChange: props.change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"file-cta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"file-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, props.label)), React.createElement(\"span\", {\n    className: \"file-name\",\n    title: props.fileName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, props.fileName)));\n}\nexport function MultipleInputFields(props) {\n  var inputFields = props.inputList.map(function (input, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: props.classList || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(SingleInputField, {\n      input: input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  });\n  return inputFields;\n}","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/components/FormFields.js"],"names":["Input","props","options","list","option","push","value","cssClass","type","placeholder","name","blur","focus","change","id","disabled","readonly","autocomplete","length","Select","TextArea","CheckBox","checked","click","Button","title","text","FileInput","label","fileName","MultipleInputFields","inputFields","inputList","map","input","index","classList"],"mappings":"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","sourcesContent":["export function Input(props) {\n\t\tlet options = [];\n\t\tif(props.options && props.list) {\n\t\t\tfor( let option of props.options) {\n\t\t\t\toptions.push(<option value={option.value} key={option.value} />);\n\t\t\t}\n\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"field\">\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName={props.cssClass || null} \n\t\t\t\t\t\ttype={props.type} \n\t\t\t\t\t\tplaceholder={props.placeholder || null} \n\t\t\t\t\t\tname={props.name || null}\n\t\t\t\t\t\tonBlur={props.blur || null}\n\t\t\t\t\t\tonFocus={props.focus || null}\n\t\t\t\t\t\tonChange={props.change || null}\n\t\t\t\t\t\tlist={props.list || null} \n\t\t\t\t\t\tid={props.id || null} \n\t\t\t\t\t\tdefaultValue={props.value}\n\t\t\t\t\t\tdisabled={props.disabled || null} \n\t\t\t\t\t\treadOnly={props.readonly || null} \n\t\t\t\t\t\tautoComplete={props.autocomplete || \"off\"}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\toptions.length > 0 && \n\t\t\t\t\t\t<datalist id={props.list}>{options}</datalist>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport function Select(props) {\n\t\tlet options = [];\n\n\t\tif(props.options.length) {\n\t\t\toptions.push(<option key=\"-1\" value=\"\" disabled> Select an option </option>);\n\n\t\t\tfor( let option of props.options) {\n\t\t\t\toptions.push(<option value={option.value} key={option.value}> {option.name} </option>);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<div className=\"select\">\n\t\t\t\t\t\t\t<select \n\t\t\t\t\t\t\t\tname={props.name || null} \n\t\t\t\t\t\t\t\tid={props.id || null}\n\t\t\t\t\t\t\t\tvalue={props.value || \"\"}\n\t\t\t\t\t\t\t\tonChange={props.change || null}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{options}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn null\n}\n\nexport function TextArea(props) {\n\treturn (\n\t\t<div className=\"field\">\n\t\t\t<div className=\"control\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\tplaceholder={props.placeholder || null}\n\t\t\t\t\tonChange={props.change || null}\n\t\t\t\t\tonBlur={props.blur || null}\n\t\t\t\t\tname={props.name || null}\n\t\t\t\t\tid={props.id || null}\n\t\t\t\t\tvalue={props.value || \"\"}\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function CheckBox(props) {\n\treturn (\n\t\t\t<label className={props.type}>\n\t\t\t\t<input \n\t\t\t\t\ttype={props.type}\n\t\t\t\t\tname={props.name || null}\n\t\t\t\t\tdefaultChecked={props.checked || null}\n\t\t\t\t\tid={props.id || null}\n\t\t\t\t\tdisabled={props.disabled || null}\n\t\t\t\t\tonChange={props.change || null}\n\t\t\t\t\tonClick={props.click || null}\n\t\t\t\t/>\n\t\t\t\t &nbsp; {props.placeholder}\n\t\t\t</label>\n\t\t)\n}\n\nexport function Button(props) {\n\treturn (\n\t\t<button\n\t\t\ttype={props.type}\n\t\t\tclassName={props.cssClass || null}\n\t\t\ttitle={props.title}\n\t\t\tonClick={props.click || null}\n\t\t>\n\t\t\t{props.text}\n\t\t</button>\n\t)\n}\n\nexport function FileInput(props) {\n  return (\n    <div className=\"file is-link has-name\">\n      <label className=\"file-label\">\n        <input className=\"file-input\" type=\"file\" name={props.name} id={props.id || props.name} onChange={props.change} />\n        <span className=\"file-cta\">\n          <span className=\"file-icon\">\n            <i className=\"fas fa-upload\"></i>\n          </span>\n          <span className=\"file-label\">\n            {props.label}\n          </span>\n        </span>\n        <span className=\"file-name\" title={props.fileName}>\n          {props.fileName}\n        </span>\n      </label>\n    </div>\n  )\n}\n\n\nexport function MultipleInputFields(props) {\n\tlet inputFields = props.inputList.map((input, index) => {\n\t\treturn (\n\t\t\t<div key={index} className={props.classList || null}>\n\t\t\t\t<SingleInputField\n\t\t\t\t\tinput={input}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t});\n\treturn inputFields;\n}\n"]},"metadata":{},"sourceType":"module"}