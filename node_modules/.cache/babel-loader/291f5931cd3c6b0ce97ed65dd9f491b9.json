{"ast":null,"code":"var _jsxFileName = \"/home/abdulhakeem/Express/exsender/components/TransactionMonitor.js\";\nimport React from \"react\";\nexport function TransactionMonitor(props) {\n  if (!props.monitorArray instanceof Array || props.monitorArray.length < 1) {\n    return null;\n  }\n\n  var transactionList = props.monitorArray.map(function (tx, i) {\n    var status;\n\n    if (tx.status == \"pending\") {\n      status = React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, i + 1, \". \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"waiting for broadcast\"), \" \", React.createElement(\"span\", {\n        className: \"has-text-link fas fa-exclamation-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    } else if (tx.status == \"processing\") {\n      status = React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, i + 1, \". \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, tx.hash), \" \", React.createElement(\"span\", {\n        className: \"has-text-primary fas fa-spinner fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    } else if (tx.status == \"success\") {\n      status = React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, i + 1, \". \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, tx.hash), \" \", React.createElement(\"span\", {\n        className: \"has-text-success fas fa-check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    } else {\n      status = React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, i + 1, \". \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, tx.hash), \" \", React.createElement(\"span\", {\n        className: \"has-text-danger fas fa-times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \" \", React.createElement(\"button\", {\n        className: \"button is-danger is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" Retry \"));\n    }\n\n    return status;\n  });\n  return React.createElement(\"div\", {\n    className: \"custom-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"is-pulled-right is-small button fas fa-times\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), transactionList);\n}","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/components/TransactionMonitor.js"],"names":["TransactionMonitor","props","monitorArray","Array","length","transactionList","map","tx","i","status","hash","onClick"],"mappings":";;AAAA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACzC,MAAI,CAACA,KAAK,CAACC,YAAP,YAA+BC,KAA/B,IAAwCF,KAAK,CAACC,YAAN,CAAmBE,MAAnB,GAA4B,CAAxE,EAA2E;AAC1E,WAAO,IAAP;AACA;;AAED,MAAIC,eAAe,GAAGJ,KAAK,CAACC,YAAN,CAAmBI,GAAnB,CAAwB,UAACC,EAAD,EAAKC,CAAL,EAAW;AACxD,QAAIC,MAAJ;;AACA,QAAIF,EAAE,CAACE,MAAH,IAAa,SAAjB,EAA4B;AAE3BA,MAAAA,MAAM,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,CAAC,GAAC,CAAd,QAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAlB,OAA+C;AAAM,QAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C,CAAT;AAEA,KAJD,MAIO,IAAID,EAAE,CAACE,MAAH,IAAa,YAAjB,EAA+B;AAErCA,MAAAA,MAAM,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,CAAC,GAAC,CAAd,QAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,EAAE,CAACG,IAAP,CAAlB,OAAmC;AAAM,QAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC,CAAT;AAEA,KAJM,MAIA,IAAIH,EAAE,CAACE,MAAH,IAAa,SAAjB,EAA4B;AAElCA,MAAAA,MAAM,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,CAAC,GAAC,CAAd,QAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,EAAE,CAACG,IAAP,CAAlB,OAAmC;AAAM,QAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC,CAAT;AAEA,KAJM,MAIA;AAEND,MAAAA,MAAM,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,CAAC,GAAC,CAAd,QAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,EAAE,CAACG,IAAP,CAAlB,OAAmC;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC,OAAiG;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjG,CAAT;AACA;;AAED,WAAOD,MAAP;AACA,GApBqB,CAAtB;AAsBA,SACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,8CADX;AAEC,IAAA,OAAO,EAAER,KAAK,CAACU,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMEN,eANF,CADD;AAUA","sourcesContent":["export function TransactionMonitor(props) {\n\tif (!props.monitorArray instanceof Array || props.monitorArray.length < 1) {\n\t\treturn null;\n\t} \n\n\tlet transactionList = props.monitorArray.map( (tx, i) => {\n\t\tlet status;\n\t\tif (tx.status == \"pending\") {\n\t\t\t\n\t\t\tstatus = <p key={i}>{i+1}. <i>waiting for broadcast</i> <span className=\"has-text-link fas fa-exclamation-circle\"></span></p>;\n\n\t\t} else if (tx.status == \"processing\") {\n\t\t\n\t\t\tstatus = <p key={i}>{i+1}. <i>{tx.hash}</i> <span className=\"has-text-primary fas fa-spinner fa-spin\"></span></p>;\n\t\t\n\t\t} else if (tx.status == \"success\") {\n\t\t\n\t\t\tstatus = <p key={i}>{i+1}. <i>{tx.hash}</i> <span className=\"has-text-success fas fa-check-circle\"></span></p>;\n\t\t\n\t\t} else {\n\n\t\t\tstatus = <p key={i}>{i+1}. <i>{tx.hash}</i> <span className=\"has-text-danger fas fa-times-circle\"></span> <button className=\"button is-danger is-small\"> Retry </button></p>;\n\t\t}\n\n\t\treturn status;\n\t} )\n\n\treturn (\n\t\t<div className=\"custom-overlay\">\n\t\t\t<i \n\t\t\t\tclassName=\"is-pulled-right is-small button fas fa-times\"\n\t\t\t\tonClick={props.onClick}\n\t\t\t>\n\t\t\t</i>\n\t\t\t{transactionList}\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}