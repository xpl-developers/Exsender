{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/pages/token-distributor.js\";\nimport React from \"react\";\nimport Page from '../layouts/Main';\nimport { Input, Button, FileInput, TextArea, Select, MultipleCheckBoxes } from '../components/FormElements';\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\nimport { ConnectedContractProps } from '../components/Contract';\nimport { TransactionMonitor } from '../components/TransactionMonitor';\nimport SubHeader from '../components/SubHeader';\nimport Processing from '../components/LoadingIndicator';\nimport Warning from '../components/Warning';\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\nvar xplAddress = \"0x51f43d0c05eEfdEB70eEAf973e0b8286E494902D\";\n\nvar TokenDistributor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TokenDistributor, _React$Component);\n\n  function TokenDistributor(props) {\n    var _this;\n\n    _classCallCheck(this, TokenDistributor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TokenDistributor).call(this, props));\n    _this.contractProps = {\n      contractName: \"\",\n      contractDecimals: \"\",\n      contractSymbol: \"\",\n      addressBalance: \"\",\n      distributorContractAllowance: \"\"\n    };\n    _this.newDistribution = {\n      selectedFileName: \"No file selected\",\n      textAreaWithAddresses: \"\",\n      tokenAmount: \"\",\n      totalAmount: \"\",\n      totalAddresses: \"\",\n      showTransactionMonitor: false,\n      transactionBatch: \"\",\n      transferPerBatch: 200,\n      //recommeded\n      transactionInProgress: false\n    };\n    _this.state = _objectSpread({\n      isUnifiedAmount: true,\n      isWeb3Browser: false,\n      web3BrowserConnected: false,\n      isProcessing: false,\n      contractAddress: \"\"\n    }, _this.contractProps, _this.newDistribution);\n    _this.toggleAmount = _this.toggleAmount.bind(_assertThisInitialized(_this));\n    _this.toggleTransactionMonitor = _this.toggleTransactionMonitor.bind(_assertThisInitialized(_this));\n    _this.restartDistribution = _this.restartDistribution.bind(_assertThisInitialized(_this));\n    _this.unlockBrowser = _this.unlockBrowser.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this)); // this.fileInput = React.createRef();\n\n    return _this;\n  }\n\n  _createClass(TokenDistributor, [{\n    key: \"unlockBrowser\",\n    value: function unlockBrowser() {\n      var self = this;\n      Web3ConnectionHandler.enableWeb3Browser().then(function () {\n        self.setState({\n          web3BrowserConnected: true\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"toggleAmount\",\n    value: function toggleAmount() {\n      this.setState({\n        isUnifiedAmount: !this.state.isUnifiedAmount\n      });\n    }\n  }, {\n    key: \"toggleTransactionMonitor\",\n    value: function toggleTransactionMonitor() {\n      this.setState({\n        showTransactionMonitor: !this.state.showTransactionMonitor\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n\n      if (name == \"contractAddress\") {\n        this.handleContractAddress(value);\n      } else if (name == \"textAreaWithAddresses\") {\n        this.handleAddresses(value);\n      } else if (name == \"tokenAmount\") {\n        this.handleAmount(value);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      var self = this;\n\n      if (name == \"uploadFileInput\") {\n        var uploadElement = document.getElementById(name);\n        var files = uploadElement.files;\n\n        if (files.length > 0) {\n          self.setState({\n            selectedFileName: files[0].name,\n            isProcessing: true\n          });\n          SpreadsheetHelper.readFile(files[0]).then(function (json) {\n            return SpreadsheetHelper.readObjectProperty(json);\n          }).then(function (columnsObject) {\n            console.log(columnsObject);\n\n            if (columnsObject[\"amounts\"]) {\n              /*self.setState({\n              \ttokenAmount: columnsObject[\"amounts\"],\n              \ttextAreaWithAddresses: columnsObject[\"addresses\"]\n              })*/\n              self.handleAmount(columnsObject[\"amounts\"].join());\n              self.handleAddresses(columnsObject[\"addresses\"].join());\n            } else {\n              /*self.setState({\n              \ttextAreaWithAddresses: columnsObject[\"addresses\"]\n              })*/\n              self.handleAddresses(columnsObject[\"addresses\"].join());\n            }\n          }).catch(function (err) {\n            window.alert(\"Invalid file.\");\n          }).finally(function () {\n            self.setState({\n              isProcessing: false\n            });\n            uploadElement.value = \"\";\n          });\n        }\n      } else {\n        self.setState(_defineProperty({}, name, value));\n      }\n    }\n  }, {\n    key: \"handleContractAddress\",\n    value: function () {\n      var _handleContractAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(value) {\n        var validAddress, contractName, contractSymbol, contractDecimals, addressBalance, distributorContractAllowance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                validAddress = Web3ConnectionHandler.validateAddress(value);\n\n                if (!validAddress) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this.setState({\n                  isProcessing: true\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return Web3ConnectionHandler.getContractProp(value, 'name');\n\n              case 6:\n                contractName = _context.sent;\n                _context.next = 9;\n                return Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n              case 9:\n                contractSymbol = _context.sent;\n                _context.next = 12;\n                return Web3ConnectionHandler.getContractProp(value, 'decimals');\n\n              case 12:\n                contractDecimals = _context.sent.toNumber();\n                _context.next = 15;\n                return Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress);\n\n              case 15:\n                _context.t0 = _context.sent.toNumber();\n                _context.t1 = Math.pow(10, contractDecimals);\n                addressBalance = (_context.t0 / _context.t1).toString();\n                _context.next = 20;\n                return Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress);\n\n              case 20:\n                _context.t2 = _context.sent;\n                _context.t3 = Math.pow(10, contractDecimals);\n                distributorContractAllowance = _context.t2 / _context.t3;\n                // update state\n                this.setState({\n                  contractName: contractName,\n                  contractSymbol: contractSymbol,\n                  contractDecimals: contractDecimals,\n                  addressBalance: addressBalance,\n                  distributorContractAllowance: distributorContractAllowance,\n                  contractInputCssClass: \"is-success\"\n                });\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t4 = _context[\"catch\"](3);\n                // console.log(\"Invalid contract Address / Check network\");\n                this.emptyContractProps();\n\n              case 29:\n                _context.prev = 29;\n                this.setState({\n                  isProcessing: false\n                });\n                return _context.finish(29);\n\n              case 32:\n                _context.next = 35;\n                break;\n\n              case 34:\n                this.emptyContractProps();\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 26, 29, 32]]);\n      }));\n\n      function handleContractAddress(_x) {\n        return _handleContractAddress.apply(this, arguments);\n      }\n\n      return handleContractAddress;\n    }()\n  }, {\n    key: \"handleAmount\",\n    value: function handleAmount(amountValue) {\n      var totalAmount;\n\n      if (!this.state.isUnifiedAmount) {\n        var amountsArray = amountValue.replace(/\\s+/g, \"\").split(',');\n        amountsArray = Misc.removeFalsey(amountsArray);\n        var validateAmounts = !amountsArray.some(function (amt) {\n          return !Number(amt);\n        });\n\n        if (validateAmounts && amountsArray.length) {\n          var amountCount = amountsArray.length;\n          totalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amountsArray,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          this.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      } else if (this.state.isUnifiedAmount) {\n        var amounts = Number(amountValue);\n\n        if (amounts) {\n          totalAmount = \"Unified\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amounts,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          this.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleAddresses\",\n    value: function handleAddresses(addressesValue) {\n      var totalAddresses,\n          addressesArray = addressesValue.replace(/\\s+/g, \"\").split(',');\n      addressesArray = Misc.removeFalsey(addressesArray);\n      addressesArray = Misc.removeSpecialChars(addressesArray); // let validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\n      if (\n      /*validAddresses*/\n      addressesArray.length) {\n        totalAddresses = addressesArray.length;\n        this.setState({\n          totalAddresses: totalAddresses,\n          textAreaWithAddresses: addressesArray,\n          textAreaWithAddressesInputCssClass: \"is-success\"\n        });\n      } else {\n        this.setState({\n          textAreaWithAddressesInputCssClass: \"is-danger\"\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var self = this; //handle addresses\n\n      if (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n        return window.alert(\"ETH Addresses must be comma separated and not empty.\");\n      } // handle amount\n\n\n      var sumAmount;\n\n      if (self.state.isUnifiedAmount) {\n        if (!Number(this.state.tokenAmount)) {\n          return window.alert(\"Invalid amount of token.\");\n        }\n\n        sumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n      } else {\n        if (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n          return window.alert(\"Amount is splitted and amount must be comma separated.\");\n        }\n\n        if (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n          return window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n        }\n\n        sumAmount = self.state.tokenAmount.reduce(Misc.numberReducer);\n      } //handle contract address\n\n\n      var contractReady = self.state.contractAddress && self.state.contractDecimals !== \"\";\n      var hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n      if (!contractReady) {\n        var message = \"Contract address is invalid\";\n        return window.alert(message);\n      } else if (!hasEnoughBalance) {\n        var _message = \"You do not have enough balance.\";\n        return window.alert(_message);\n      } // window.alert(\"Contract is ready to be sent\");\n\n\n      self.handleDistribution();\n    }\n  }, {\n    key: \"handleDistribution\",\n    value: function handleDistribution() {\n      var self = this;\n\n      var init = function init() {\n        if (self.state.isUnifiedAmount) {\n          self.handleDistributionWithUnifiedAmount();\n        } else {\n          self.handleDistributionWithSplittedAmount();\n        } // update transactionBatch\n\n\n        var batches = [],\n            length = Math.ceil(self.state.textAreaWithAddresses.length / self.state.transferPerBatch);\n\n        for (var i = 0; i < length; i++) {\n          var temp = {\n            status: \"pending\",\n            hash: \"waiting for broadcast\"\n          };\n          batches[i] = temp;\n        }\n\n        self.setState({\n          transactionBatch: batches,\n          showTransactionMonitor: true\n        });\n      };\n\n      if (self.state.distributorContractAllowance < 1) {\n        Web3ConnectionHandler.approveSpender(self.state.contractAddress, self.state.addressBalance * Math.pow(10, self.state.contractDecimals)).then(function (txHash) {\n          self.setState({\n            isProcessing: true,\n            transactionInProgress: true\n          });\n          return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n        }).then(function (txReceipt) {\n          if (txReceipt.status == \"0x0\") {\n            //transaction failed!\n            return window.alert(\"Approval transaction failed.\");\n          }\n\n          self.setState({\n            distributorContractAllowance: self.state.addressBalance\n          });\n          init();\n        }).catch(function (err) {\n          window.alert(\"error occurred\", err);\n        }).finally(function () {\n          self.setState({\n            isProcessing: false,\n            transactionInProgress: false\n          });\n        });\n      } else {\n        init();\n      }\n    }\n  }, {\n    key: \"handleDistributionWithSplittedAmount\",\n    value: function handleDistributionWithSplittedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.transferPerBatch;\n      iterator = Number(iterator);\n      size = Number(size);\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n      chunkAmount = chunkAmount.map(function (amt) {\n        return amt * Math.pow(10, self.state.contractDecimals);\n      });\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      self.setState({\n        isProcessing: true,\n        transactionInProgress: true\n      });\n      Web3ConnectionHandler.distributeToken(\"distributeForeignTokenWithAmount\", self.state.contractAddress, chunkAddresses, chunkAmount).then(function (txHash) {\n        self.updateMonitor(iterator, {\n          status: \"processing\",\n          hash: txHash\n        });\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          self.updateMonitor(iterator, {\n            hash: txReceipt.transactionHash,\n            onClick: self.restartDistribution\n          });\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        }\n\n        self.updateMonitor(iterator, {\n          status: \"success\",\n          hash: txReceipt.transactionHash\n        }); //call the next transaction\n\n        self.handleDistributionWithSplittedAmount(iterator + 1);\n      }).catch(function (err) {\n        self.updateMonitor(iterator, {\n          hash: \"txhash unknown\",\n          onClick: self.restartDistribution\n        });\n        window.alert(\"Error occurred at transaction index \" + iterator);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false,\n          transactionInProgress: false\n        });\n      });\n    }\n  }, {\n    key: \"handleDistributionWithUnifiedAmount\",\n    value: function handleDistributionWithUnifiedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.transferPerBatch;\n      iterator = Number(iterator);\n      size = Number(size);\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      self.setState({\n        isProcessing: true,\n        transactionInProgress: true\n      });\n      Web3ConnectionHandler.distributeToken(\"distributeForeignToken\", self.state.contractAddress, chunkAddresses, amount).then(function (txHash) {\n        self.updateMonitor(iterator, {\n          status: \"processing\",\n          hash: txHash\n        });\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          self.updateMonitor(iterator, {\n            hash: txReceipt.transactionHash,\n            onClick: self.restartDistribution\n          });\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        }\n\n        self.updateMonitor(iterator, {\n          status: \"success\",\n          hash: txReceipt.transactionHash\n        }); //call the next transaction\n\n        self.handleDistributionWithUnifiedAmount(iterator + 1);\n      }).catch(function (err) {\n        self.updateMonitor(iterator, {\n          hash: \"txhash unknown\",\n          onClick: self.restartDistribution\n        });\n        window.alert(\"Error occurred at transaction index \" + iterator);\n        console.log(err);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false,\n          transactionInProgress: false\n        });\n      });\n    }\n  }, {\n    key: \"updateMonitor\",\n    value: function updateMonitor(index, properties) {\n      this.setState(function (state, props) {\n        var newBatch = _toConsumableArray(state.transactionBatch);\n\n        newBatch[index] = _objectSpread({}, properties);\n        return {\n          transactionBatch: newBatch\n        };\n      });\n    }\n  }, {\n    key: \"restartDistribution\",\n    value: function restartDistribution(e) {\n      var iterator = e.target.getAttribute(\"data-index\");\n\n      if (this.state.isUnifiedAmount) {\n        this.handleDistributionWithUnifiedAmount(iterator);\n      } else {\n        this.handleDistributionWithSplittedAmount(iterator);\n      }\n    }\n  }, {\n    key: \"emptyContractProps\",\n    value: function emptyContractProps() {\n      this.setState(_objectSpread({\n        contractInputCssClass: \"is-danger\"\n      }, this.contractProps));\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState(_objectSpread({\n        contractAddress: \"\",\n        contractInputCssClass: \"\",\n        tokenAmountInputCssClass: \"\",\n        textAreaWithAddressesInputCssClass: \"\"\n      }, this.newDistribution, this.contractProps));\n    }\n  }, {\n    key: \"formFields\",\n    value: function formFields() {\n      return {\n        contractAddress: {\n          type: \"text\",\n          name: \"contractAddress\",\n          placeholder: \"Contract Address\",\n          className: this.state.contractInputCssClass + \" is-large\",\n          value: this.state.contractAddress,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        contractDecimals: {\n          type: \"text\",\n          name: \"contractDecimals\",\n          placeholder: \"Decimals\",\n          className: \"is-medium\",\n          readOnly: true,\n          value: this.state.contractDecimals\n        },\n        addressBalance: {\n          type: \"text\",\n          name: \"addressBalance\",\n          placeholder: \"Balance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.addressBalance\n        },\n        distributorContractAllowance: {\n          type: \"text\",\n          name: \"distributorContractAllowance\",\n          placeholder: \"Allowance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.distributorContractAllowance\n        },\n        amountController: [{\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Unified amount\",\n          defaultChecked: true,\n          onChange: this.toggleAmount\n        }, {\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Split amount\",\n          onChange: this.toggleAmount\n        }],\n        uploadFileInput: {\n          name: \"uploadFileInput\",\n          onChange: this.handleChange,\n          label: \"Import data (optional)\",\n          fileName: this.state.selectedFileName\n        },\n        tokenAmountInput: {\n          type: \"text\",\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass + \" is-large\",\n          value: this.state.tokenAmount,\n          placeholder: \"Amount of token\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        tokenAmountTextArea: {\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass,\n          value: this.state.tokenAmount,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange,\n          placeholder: \"Unlimited comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n          tokenAmountType: \"textarea\"\n        },\n        textAreaWithAddresses: {\n          name: \"textAreaWithAddresses\",\n          className: this.state.textAreaWithAddressesInputCssClass,\n          value: this.state.textAreaWithAddresses,\n          placeholder: \"Unlimited comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        submitButton: {\n          type: \"submit\",\n          text: \"Send Transaction\",\n          className: \"button is-large is-link\",\n          disabled: this.state.transactionInProgress ? true : null\n        },\n        resetButton: {\n          type: \"button\",\n          text: \"Reset\",\n          className: \"button is-medium is-danger\",\n          onClick: this.handleReset\n        },\n        monitorButton: {\n          type: \"button\",\n          text: \"Show monitor\",\n          className: \"button is-warning is-small\",\n          onClick: this.toggleTransactionMonitor\n        },\n        transferPerBatch: {\n          name: \"transferPerBatch\",\n          value: this.state.transferPerBatch,\n          onChange: this.handleChange,\n          className: \"is-small\",\n          options: [{\n            value: \"100\"\n          }, {\n            value: \"150\"\n          }, {\n            value: \"175\"\n          }, {\n            value: \"200\"\n          }, {\n            value: \"250\"\n          }, {\n            value: \"300\"\n          }]\n        }\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Web3ConnectionHandler.checkBrowserCompatibility()) {\n        this.setState({\n          isWeb3Browser: true\n        });\n        this.unlockBrowser();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595\n          },\n          __self: this\n        }), React.createElement(\"section\", {\n          className: \"halfpage-height mb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column is-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, React.createElement(ConnectedContractProps, {\n          contractAddress: this.state.contractAddress,\n          contractName: this.state.contractName,\n          contractSymbol: this.state.contractSymbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"is-size-6 has-background-white border-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, React.createElement(Button, _extends({}, this.formFields().monitorButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }, \"Transfer per transaction\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }), React.createElement(Select, _extends({}, this.formFields().transferPerBatch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"column is-8\",\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().contractAddress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 622\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 623\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().contractDecimals, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().addressBalance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().distributorContractAllowance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        })))), React.createElement(MultipleCheckBoxes, {\n          inputArray: this.formFields().amountController,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 634\n          },\n          __self: this\n        }), React.createElement(FileInput, _extends({}, this.formFields().uploadFileInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637\n          },\n          __self: this\n        })), this.state.isUnifiedAmount && React.createElement(Input, _extends({}, this.formFields().tokenAmountInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643\n          },\n          __self: this\n        })), !this.state.isUnifiedAmount && React.createElement(TextArea, _extends({}, this.formFields().tokenAmountTextArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        })), React.createElement(TextArea, _extends({}, this.formFields().textAreaWithAddresses, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 652\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657\n          },\n          __self: this\n        }, React.createElement(Button, _extends({}, this.formFields().submitButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658\n          },\n          __self: this\n        })), React.createElement(Button, _extends({}, this.formFields().resetButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668\n          },\n          __self: this\n        }, React.createElement(DistributionStat, {\n          totalAmount: this.state.totalAmount,\n          totalAddresses: this.state.totalAddresses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        }), this.state.isProcessing && React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678\n          },\n          __self: this\n        }), React.createElement(Warning, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679\n          },\n          __self: this\n        }))))), this.state.showTransactionMonitor && React.createElement(TransactionMonitor, {\n          onClick: this.toggleTransactionMonitor,\n          monitorArray: this.state.transactionBatch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686\n          },\n          __self: this\n        }));\n      } else if (this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 695\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696\n          },\n          __self: this\n        }), React.createElement(LockedWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button is-warning is-large\",\n          onClick: this.unlockBrowser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698\n          },\n          __self: this\n        }, \"Unlock Metamask\")));\n      } else {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 709\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710\n          },\n          __self: this\n        }), React.createElement(NoWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 711\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return TokenDistributor;\n}(React.Component);\n\nfunction DistributionStat(props) {\n  return React.createElement(\"div\", {\n    className: \"is-size-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"is-size-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723\n    },\n    __self: this\n  }, \"Amount count: \", props.totalAmount || 0, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724\n    },\n    __self: this\n  }), \"Address count: \", props.totalAddresses || 0));\n}\n\nexport default TokenDistributor;","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/pages/token-distributor.js"],"names":["Page","Input","Button","FileInput","TextArea","Select","MultipleCheckBoxes","LockedWeb3Browser","NoWeb3Browser","Web3ConnectionProps","ConnectedContractProps","TransactionMonitor","SubHeader","Processing","Warning","SpreadsheetHelper","Web3ConnectionHandler","Misc","xplAddress","TokenDistributor","props","contractProps","contractName","contractDecimals","contractSymbol","addressBalance","distributorContractAllowance","newDistribution","selectedFileName","textAreaWithAddresses","tokenAmount","totalAmount","totalAddresses","showTransactionMonitor","transactionBatch","transferPerBatch","transactionInProgress","state","isUnifiedAmount","isWeb3Browser","web3BrowserConnected","isProcessing","contractAddress","toggleAmount","bind","toggleTransactionMonitor","restartDistribution","unlockBrowser","handleBlur","handleChange","handleSubmit","handleReset","self","enableWeb3Browser","then","setState","catch","err","console","log","e","target","name","value","handleContractAddress","handleAddresses","handleAmount","uploadElement","document","getElementById","files","length","readFile","json","readObjectProperty","columnsObject","join","window","alert","finally","validAddress","validateAddress","getContractProp","toNumber","checkBrowserCompatibility","selectedAddress","Math","pow","toString","contractInputCssClass","emptyContractProps","amountValue","amountsArray","replace","split","removeFalsey","validateAmounts","some","amt","Number","amountCount","reduce","numberReducer","tokenAmountInputCssClass","amounts","addressesValue","addressesArray","removeSpecialChars","textAreaWithAddressesInputCssClass","preventDefault","Array","sumAmount","contractReady","hasEnoughBalance","message","handleDistribution","init","handleDistributionWithUnifiedAmount","handleDistributionWithSplittedAmount","batches","ceil","i","temp","status","hash","approveSpender","txHash","getMinedTransactionReceipt","txReceipt","iterator","size","chunkAddresses","slice","chunkAmount","map","distributeToken","updateMonitor","transactionHash","onClick","amount","index","properties","newBatch","getAttribute","type","placeholder","className","onBlur","onChange","readOnly","amountController","defaultChecked","uploadFileInput","label","fileName","tokenAmountInput","tokenAmountTextArea","tokenAmountType","submitButton","text","disabled","resetButton","monitorButton","options","formFields","React","Component","DistributionStat"],"mappings":"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","sourcesContent":["import Page from '../layouts/Main';\n\nimport { Input, Button, FileInput, TextArea, Select, MultipleCheckBoxes } from '../components/FormElements';\n\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\nimport { ConnectedContractProps } from '../components/Contract';\nimport { TransactionMonitor } from '../components/TransactionMonitor';\n\nimport SubHeader from '../components/SubHeader';\nimport Processing from '../components/LoadingIndicator';\nimport Warning from '../components/Warning';\n\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\n\nconst xplAddress = \"0x51f43d0c05eEfdEB70eEAf973e0b8286E494902D\";\n\nclass TokenDistributor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.contractProps = {\n\t\t\tcontractName: \"\",\n\t\t\tcontractDecimals: \"\",\n\t\t\tcontractSymbol: \"\",\n\t\t\taddressBalance: \"\",\n\t\t\tdistributorContractAllowance: \"\",\n\t\t}\n\t\tthis.newDistribution = {\n\t\t\tselectedFileName: \"No file selected\",\n\t\t\ttextAreaWithAddresses: \"\",\n\t\t\ttokenAmount: \"\",\n\t\t\ttotalAmount: \"\",\n\t\t\ttotalAddresses: \"\",\n\t\t\tshowTransactionMonitor: false,\n\t\t\ttransactionBatch: \"\",\n\t\t\ttransferPerBatch: 200,//recommeded\n\t\t\ttransactionInProgress: false\n\t\t}\n\n\t\tthis.state = {\n\t\t\tisUnifiedAmount: true, \n\t\t\tisWeb3Browser: false, \n\t\t\tweb3BrowserConnected: false,\n\t\t\tisProcessing: false,\n\t\t\tcontractAddress: \"\",\n\t\t\t\n\t\t\t...this.contractProps,\n\t\t\t...this.newDistribution\n\t\t};\n\n\t\tthis.toggleAmount = this.toggleAmount.bind(this);\n\t\tthis.toggleTransactionMonitor = this.toggleTransactionMonitor.bind(this);\n\t\tthis.restartDistribution = this.restartDistribution.bind(this);\n\t\tthis.unlockBrowser = this.unlockBrowser.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleReset = this.handleReset.bind(this);\n\n\t\t// this.fileInput = React.createRef();\n\t}\n\tunlockBrowser() {\n\t\tlet self = this;\n\t\tWeb3ConnectionHandler.enableWeb3Browser()\n\t\t.then(function() {\n\t\t\tself.setState({web3BrowserConnected: true});\n\t\t})\n\t\t.catch(function(err) {\n\t\t\tconsole.log(err)\n\t\t})\n\t}\n\ttoggleAmount() {\n\t\tthis.setState({\n\t\t\tisUnifiedAmount: !this.state.isUnifiedAmount\n\t\t})\n\t}\n\ttoggleTransactionMonitor() {\n\t\tthis.setState({\n\t\t\tshowTransactionMonitor: !this.state.showTransactionMonitor\n\t\t})\n\t}\t\n\thandleBlur(e) {\n\t\tlet {name, value} = e.target;\n\t\tthis.setState({[name]: value});\n\n\t\tif ( name == \"contractAddress\" ) {\n\t\t\tthis.handleContractAddress(value);\n\t\t} else if ( name == \"textAreaWithAddresses\" ) {\n\t\t\tthis.handleAddresses(value);\n\t\t} else if ( name == \"tokenAmount\" ) {\n\t\t\tthis.handleAmount(value);\n\t\t}\n\t}\n\thandleChange(e) {\n\t\tlet {name, value} = e.target;\n\t\tlet self = this;\n\n\t\tif (name == \"uploadFileInput\") {\n\t\t\tlet uploadElement = document.getElementById(name);\n\t\t\tlet files = uploadElement.files;\n\n\t\t\tif(files.length > 0 ) {\n\t\t\t\tself.setState({\n\t\t\t\t\tselectedFileName: files[0].name,\n\t\t\t\t\tisProcessing: true\n\t\t\t\t});\n\n\t\t\t\tSpreadsheetHelper.readFile(files[0])\n\t\t\t\t.then( json => {\n\t\t\t\t\treturn SpreadsheetHelper.readObjectProperty(json);\n\t\t\t\t})\n\t\t\t\t.then( columnsObject => {\n\t\t\t\t\tconsole.log(columnsObject)\n\t\t\t\t\tif ( columnsObject[\"amounts\"] ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t/*self.setState({\n\t\t\t\t\t\t\ttokenAmount: columnsObject[\"amounts\"],\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"]\n\t\t\t\t\t\t})*/\n\t\t\t\t\t\tself.handleAmount(columnsObject[\"amounts\"].join());\n\t\t\t\t\t\tself.handleAddresses(columnsObject[\"addresses\"].join());\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*self.setState({\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"]\n\t\t\t\t\t\t})*/\n\t\t\t\t\t\tself.handleAddresses(columnsObject[\"addresses\"].join());\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch( err => {\n\t\t\t\t\twindow.alert(\"Invalid file.\")\n\t\t\t\t})\n\t\t\t\t.finally(() =>  {\n\t\t\t\t\tself.setState({isProcessing: false});\n\t\t\t\t\tuploadElement.value = \"\";\n\t\t\t\t}) \n\n\t\t\t}\n\t\t} else {\n\t\t\tself.setState({[name]: value});\t\n\t\t} \n\t}\n\tasync handleContractAddress(value) {\n\t\tlet validAddress = Web3ConnectionHandler.validateAddress(value);\n\n\t\tif( validAddress ) {\n\t\t\tthis.setState({isProcessing: true});\n\t\t\ttry {\n\t\t\t\tlet contractName = await Web3ConnectionHandler.getContractProp(value, 'name');\n\t\t\t\t\n\t\t\t\tlet contractSymbol = await Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n\t\t\t\tlet contractDecimals = (await Web3ConnectionHandler.getContractProp(value, 'decimals')).toNumber();\n\t\t\t\t\n\t\t\t\tlet addressBalance = ((await Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress)).toNumber() / Math.pow(10, contractDecimals)).toString();\n\n\t\t\t\tlet distributorContractAllowance = (await Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress)) / Math.pow(10, contractDecimals);\n\t\t\t\t\n\t\t\t\t// update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tcontractName,\n\t\t\t\t\tcontractSymbol,\n\t\t\t\t\tcontractDecimals,\n\t\t\t\t\taddressBalance,\n\t\t\t\t\tdistributorContractAllowance,\n\t\t\t\t\tcontractInputCssClass: \"is-success\"\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// console.log(\"Invalid contract Address / Check network\");\n\t\t\t\tthis.emptyContractProps();\n\t\t\t} finally {\n\t\t\t\tthis.setState({isProcessing: false});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.emptyContractProps();\n\t\t}\n\t}\n\thandleAmount(amountValue) {\n\t\tlet totalAmount;\n\t\tif ( !this.state.isUnifiedAmount ) {\n\t\t\tlet amountsArray = (amountValue.replace(/\\s+/g, \"\")).split(',');\n\t\t\t\tamountsArray = Misc.removeFalsey(amountsArray);\n\n\t\t\tlet validateAmounts = !amountsArray.some( amt => !Number(amt) );\n\n\t\t\tif ( validateAmounts && amountsArray.length) {\n\t\t\t\t\n\t\t\t\tlet amountCount = amountsArray.length;\n\t\t\t\ttotalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amountsArray,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( this.state.isUnifiedAmount ) {\n\t\t\tlet amounts = Number(amountValue);\n\t\t\tif ( amounts ) {\n\t\t\t\ttotalAmount = \"Unified\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amounts,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\thandleAddresses(addressesValue) {\n\t\tlet totalAddresses,\n\t\t\taddressesArray = (addressesValue.replace(/\\s+/g, \"\")).split(',');\n\t\t\taddressesArray = Misc.removeFalsey(addressesArray);\n\t\t\taddressesArray = Misc.removeSpecialChars(addressesArray);\n\t\t// let validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\t\tif ( /*validAddresses*/ addressesArray.length ) {\n\t\t\ttotalAddresses = addressesArray.length;\n\t\t\tthis.setState({\n\t\t\t\ttotalAddresses,\n\t\t\t\ttextAreaWithAddresses: addressesArray,\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-success\"\n\t\t\t});\n\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-danger\"\n\t\t\t});\t\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tlet self = this;\n\t\t//handle addresses\n\t\tif (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n\t\t\treturn window.alert(\"ETH Addresses must be comma separated and not empty.\");\n\t\t}\n\t\t// handle amount\n\t\tlet sumAmount;\n\t\tif (self.state.isUnifiedAmount) {\n\t\t\tif (!Number(this.state.tokenAmount)) {\n\t\t\t\treturn window.alert(\"Invalid amount of token.\");\n\t\t\t} \n\t\t\tsumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n\t\t} else {\n\t\t\tif (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n\t\t\t\treturn window.alert(\"Amount is splitted and amount must be comma separated.\");\n\t\t\t} \n\t\t\tif (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n\t\t\t\treturn window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n\t\t\t} \n\t\t\tsumAmount = self.state.tokenAmount.reduce(Misc.numberReducer);\n\t\t}\n\t\t//handle contract address\n\t\tlet contractReady = self.state.contractAddress && (self.state.contractDecimals !== \"\");\n\t\tlet hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n\t\tif (!contractReady) {\n\t\t\tlet message = \"Contract address is invalid\";\n\t\t\treturn window.alert(message);\n\t\t} else if (!hasEnoughBalance) {\n\t\t\tlet message = \"You do not have enough balance.\";\n\t\t\treturn window.alert(message);\n\t\t}\n\t\t// window.alert(\"Contract is ready to be sent\");\n\t\tself.handleDistribution();\n\t}\n\thandleDistribution() {\n\t\tlet self = this;\n\n\t\tlet init = () => {\n\t\t\tif (self.state.isUnifiedAmount) {\n\t\t\t\tself.handleDistributionWithUnifiedAmount();\n\t\t\t} else {\n\t\t\t\tself.handleDistributionWithSplittedAmount();\n\t\t\t}\n\n\t\t\t// update transactionBatch\n\t\t\tlet batches = [],\n\t\t\t\tlength = Math.ceil(self.state.textAreaWithAddresses.length / self.state.transferPerBatch);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tlet temp = {status: \"pending\", hash: \"waiting for broadcast\"};\n\t\t\t\tbatches[i] = temp;\n\t\t\t}\n\n\t\t\tself.setState({\n\t\t\t\ttransactionBatch: batches,\n\t\t\t\tshowTransactionMonitor: true\n\t\t\t})\n\t\t}\n\n\t\tif (self.state.distributorContractAllowance < 1) {\n\t\t\tWeb3ConnectionHandler.approveSpender(\n\t\t\t\tself.state.contractAddress,\n\t\t\t\t(self.state.addressBalance * Math.pow(10, self.state.contractDecimals))\n\t\t\t)\n\t\t\t.then(txHash => {\n\t\t\t\tself.setState({isProcessing: true, transactionInProgress: true});\n\t\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t\t})\n\t\t\t.then(txReceipt => {\n\t\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t\t//transaction failed!\n\t\t\t\t\treturn window.alert(\"Approval transaction failed.\");\n\t\t\t\t}\n\t\t\t\tself.setState({\n\t\t\t\t\tdistributorContractAllowance: self.state.addressBalance\n\t\t\t\t});\n\n\t\t\t\tinit();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\twindow.alert(\"error occurred\", err);\n\t\t\t})\n\t\t\t.finally (() => {\n\t\t\t\tself.setState({isProcessing: false, transactionInProgress: false});\n\t\t\t}) \n\t\t} else {\n\t\t\tinit();\n\t\t}\n\t}\n\thandleDistributionWithSplittedAmount(iterator = 0, size = this.state.transferPerBatch) {\n\t\titerator = Number(iterator);\n\t\tsize = Number(size);\n\t\t\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\n\t\tlet chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n\n\t\t\tchunkAmount = chunkAmount.map(amt => amt * Math.pow(10, self.state.contractDecimals));\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\t\tself.setState({isProcessing: true, transactionInProgress: true});\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignTokenWithAmount\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tchunkAmount\n\t\t)\n\t\t.then(txHash => {\n\t\t\t\n\t\t\tself.updateMonitor(iterator, {status: \"processing\", hash: txHash})\n\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\tself.updateMonitor(iterator, {hash: txReceipt.transactionHash, onClick: self.restartDistribution})\n\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\t\t\t\n\t\t\tself.updateMonitor(iterator, {status: \"success\", hash: txReceipt.transactionHash});\n\t\t\t\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithSplittedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\tself.updateMonitor(iterator, {hash: \"txhash unknown\", onClick: self.restartDistribution})\n\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false, transactionInProgress: false});\n\t\t}) \n\t}\n\thandleDistributionWithUnifiedAmount(iterator = 0, size = this.state.transferPerBatch) {\n\t\titerator = Number(iterator);\n\t\tsize = Number(size);\n\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\t\t\n\t\tlet amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\n\t\tself.setState({isProcessing: true, transactionInProgress: true});\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignToken\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tamount\n\t\t)\n\t\t.then(txHash => {\n\t\t\tself.updateMonitor(iterator, {status: \"processing\", hash: txHash})\n\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\tself.updateMonitor(iterator, {hash: txReceipt.transactionHash, onClick: self.restartDistribution})\n\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\n\t\t\tself.updateMonitor(iterator, {status: \"success\", hash: txReceipt.transactionHash});\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithUnifiedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\tself.updateMonitor(iterator, {hash: \"txhash unknown\", onClick: self.restartDistribution})\n\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t\t\tconsole.log(err)\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false, transactionInProgress: false});\n\t\t}) \n\t}\n\tupdateMonitor(index, properties) {\n\t\tthis.setState((state, props) => {\n\t\t\tlet newBatch = [...state.transactionBatch];\n\t\t\t\tnewBatch[index] = {...properties};\n\t\t\treturn {\n\t\t\t\ttransactionBatch: newBatch\n\t\t\t}\n\t\t});\n\t}\n\trestartDistribution(e) {\n\t\tlet iterator = e.target.getAttribute(\"data-index\");\n\t\t\n\t\tif (this.state.isUnifiedAmount) {\n\t\t\tthis.handleDistributionWithUnifiedAmount(iterator);\n\t\t} else {\n\t\t\tthis.handleDistributionWithSplittedAmount(iterator);\n\t\t}\n\t}\n\temptyContractProps() {\n\t\tthis.setState({\n\t\t\tcontractInputCssClass: \"is-danger\",\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\thandleReset() {\n\t\tthis.setState({\n\t\t\tcontractAddress: \"\",\n\t\t\tcontractInputCssClass: \"\",\n\t\t\ttokenAmountInputCssClass: \"\",\n\t\t\ttextAreaWithAddressesInputCssClass: \"\",\n\t\t\t...this.newDistribution,\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\tformFields() {\n\t\treturn {\n\t\t\tcontractAddress: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractAddress\",\n\t\t\t\tplaceholder: \"Contract Address\",\n\t\t\t\tclassName: this.state.contractInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.contractAddress,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tcontractDecimals: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractDecimals\",\n\t\t\t\tplaceholder: \"Decimals\",\n\t\t\t\tclassName: \"is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.contractDecimals\n\t\t\t},\n\t\t\taddressBalance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"addressBalance\",\n\t\t\t\tplaceholder: \"Balance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.addressBalance\n\t\t\t},\n\t\t\tdistributorContractAllowance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"distributorContractAllowance\",\n\t\t\t\tplaceholder: \"Allowance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.distributorContractAllowance\n\n\t\t\t},\n\t\t\tamountController: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Unified amount\",\n\t\t\t\t\tdefaultChecked: true,\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Split amount\",\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t}\n\t\t\t],\n\t\t\tuploadFileInput: {\n\t\t\t\tname: \"uploadFileInput\",\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tlabel: \"Import data (optional)\",\n\t\t\t\tfileName: this.state.selectedFileName\n\t\t\t},\n\t\t\ttokenAmountInput: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tplaceholder: \"Amount of token\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\ttokenAmountTextArea: {\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass,\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tplaceholder: \"Unlimited comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n\t\t\t\ttokenAmountType: \"textarea\",\n\t\t\t},\n\n\t\t\ttextAreaWithAddresses: {\n\t\t\t\tname: \"textAreaWithAddresses\",\n\t\t\t\tclassName: this.state.textAreaWithAddressesInputCssClass,\n\t\t\t\tvalue: this.state.textAreaWithAddresses,\n\t\t\t\tplaceholder: \"Unlimited comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tsubmitButton: {\n\t\t\t\ttype: \"submit\",\n\t\t\t\ttext: \"Send Transaction\",\n\t\t\t\tclassName: \"button is-large is-link\",\n\t\t\t\tdisabled: this.state.transactionInProgress ? true : null\n\t\t\t},\n\t\t\tresetButton: {\n\t\t\t\ttype: \"button\",\n\t\t\t\ttext: \"Reset\",\n\t\t\t\tclassName: \"button is-medium is-danger\",\n\t\t\t\tonClick: this.handleReset\n\t\t\t},\n\t\t\tmonitorButton: {\n\t\t\t\ttype: \"button\",\n\t\t\t\ttext: \"Show monitor\",\n\t\t\t\tclassName: \"button is-warning is-small\",\n\t\t\t\tonClick: this.toggleTransactionMonitor\n\t\t\t},\n\t\t\ttransferPerBatch: {\n\t\t\t\tname: \"transferPerBatch\",\n\t\t\t\tvalue: this.state.transferPerBatch,\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tclassName: \"is-small\",\n\t\t\t\toptions: [\t\n\t\t\t\t\t{value: \"100\"},\n\t\t\t\t\t{value: \"150\"},\n\t\t\t\t\t{value: \"175\"},\n\t\t\t\t\t{value: \"200\"},\n\t\t\t\t\t{value: \"250\"},\n\t\t\t\t\t{value: \"300\"},\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tif (Web3ConnectionHandler.checkBrowserCompatibility()) {\n\t\t\tthis.setState({isWeb3Browser: true});\n\t\t\tthis.unlockBrowser();\n\t\t}\n\t}\n\trender() {\n\t\tif (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<section className=\"halfpage-height mb-4\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t<div className=\"column is-8\">\n\t\t\t\t\t\t\t\t\t<ConnectedContractProps\n\t\t\t\t\t\t\t\t\t\tcontractAddress={this.state.contractAddress}\n\t\t\t\t\t\t\t\t\t\tcontractName={this.state.contractName}\n\t\t\t\t\t\t\t\t\t\tcontractSymbol={this.state.contractSymbol}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<div className=\"is-size-6 has-background-white border-left\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().monitorButton}\n\t\t\t\t\t\t\t\t\t\t/><br/>\n\t\t\t\t\t\t\t\t\t\t<span>Transfer per transaction</span><br/>\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().transferPerBatch}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t<form className=\"column is-8\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractAddress} />\n\n\t\t\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractDecimals} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().addressBalance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().distributorContractAllowance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<MultipleCheckBoxes \n\t\t\t\t\t\t\t\t\t\tinputArray={this.formFields().amountController}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().uploadFileInput} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().tokenAmountInput} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t!this.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().tokenAmountTextArea} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().textAreaWithAddresses} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"control buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().submitButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().resetButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<DistributionStat\n\t\t\t\t\t\t\t\t\t\ttotalAmount = {this.state.totalAmount}\n\t\t\t\t\t\t\t\t\t\ttotalAddresses = {this.state.totalAddresses}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t\t{ this.state.isProcessing &&\n\t\t\t\t\t\t\t\t\t\t<Processing />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t<Warning />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\t\t\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.showTransactionMonitor &&\n\t\t\t\t\t\t<TransactionMonitor\n\t\t\t\t\t\t\tonClick={this.toggleTransactionMonitor}\n\t\t\t\t\t\t\tmonitorArray={this.state.transactionBatch}\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t}\n\t\t\t\t</Page>\t\n\t\t\t)\n\t\t} else if (this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<LockedWeb3Browser>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"button is-warning is-large\"\n\t\t\t\t\t\t\tonClick={this.unlockBrowser}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tUnlock Metamask\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</LockedWeb3Browser>\n\t\t\t\t</Page>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<NoWeb3Browser />\n\t\t\t\t</Page>\n\t\t\t) \n\t\t}\n\t}\n}\n\n\nfunction DistributionStat(props) {\n\treturn (\n\t\t<div className=\"is-size-6\">\n\t\t\t<h3 className=\"is-size-5\">Statistics</h3>\n\t\t\t<p>\n\t\t\t\tAmount count: {props.totalAmount || 0} <br/>\n\t\t\t\tAddress count: {props.totalAddresses || 0} \n\t\t\t</p>\n\t\t</div>\n\t)\n}\n\n\n\nexport default TokenDistributor;"]},"metadata":{},"sourceType":"module"}