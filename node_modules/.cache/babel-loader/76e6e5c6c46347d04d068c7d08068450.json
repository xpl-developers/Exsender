{"ast":null,"code":"var _jsxFileName = \"/home/abdulhakeem/Express/exsender/components/TransactionMonitor.js\";\nimport React from \"react\";\nexport function TransactionMonitor(props) {\n  if (!props.monitorArray instanceof Array || props.monitorArray.length < 1) {\n    return React.createElement(\"div\", {\n      className: \"modal is-active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"No transaction found\")), React.createElement(\"button\", {\n      className: \"modal-close is-large\",\n      \"arial-label\": \"close\",\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  }\n\n  var transactionList = props.monitorArray.map(function (tx, i) {\n    var icon;\n\n    if (tx.status == \"pending\") {\n      icon = React.createElement(\"span\", {\n        className: \"has-text-link fas fa-exclamation-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    } else if (tx.status == \"processing\") {\n      icon = React.createElement(\"span\", {\n        className: \"has-text-primary fas fa-spinner fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    } else if (tx.status == \"success\") {\n      icon = React.createElement(\"span\", {\n        className: \"has-text-success fas fa-check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else {\n      icon = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"has-text-danger fas fa-times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \" \", React.createElement(\"button\", {\n        className: \"button is-danger is-small\",\n        \"data-index\": i,\n        onClick: tx.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" retry \"), \" \");\n    }\n\n    return React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, i + 1, \". \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, tx.hash || \"txhash unknown\"), \"\\xA0 \", icon);\n  });\n  return React.createElement(\"div\", {\n    className: \"modal is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, transactionList), React.createElement(\"button\", {\n    className: \"modal-close is-large\",\n    \"arial-label\": \"close\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/components/TransactionMonitor.js"],"names":["TransactionMonitor","props","monitorArray","Array","length","onClick","transactionList","map","tx","i","icon","status","hash"],"mappings":";;AAAA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACzC,MAAI,CAACA,KAAK,CAACC,YAAP,YAA+BC,KAA/B,IAAwCF,KAAK,CAACC,YAAN,CAAmBE,MAAnB,GAA4B,CAAxE,EAA2E;AAC1E,WACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,CAFD,EAMC;AACC,MAAA,SAAS,EAAC,sBADX;AAEC,qBAAY,OAFb;AAGC,MAAA,OAAO,EAAEH,KAAK,CAACI,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAcA;;AAED,MAAIC,eAAe,GAAGL,KAAK,CAACC,YAAN,CAAmBK,GAAnB,CAAwB,UAACC,EAAD,EAAKC,CAAL,EAAW;AACxD,QAAIC,IAAJ;;AACA,QAAIF,EAAE,CAACG,MAAH,IAAa,SAAjB,EAA4B;AAC3BD,MAAAA,IAAI,GAAG;AAAM,QAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEA,KAHD,MAGO,IAAIF,EAAE,CAACG,MAAH,IAAa,YAAjB,EAA+B;AAErCD,MAAAA,IAAI,GAAG;AAAM,QAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEA,KAJM,MAIA,IAAIF,EAAE,CAACG,MAAH,IAAa,SAAjB,EAA4B;AAElCD,MAAAA,IAAI,GAAG;AAAM,QAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEA,KAJM,MAIA;AAENA,MAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,OAAqE;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,sBAAYD,CAA1D;AAA6D,QAAA,OAAO,EAAED,EAAE,CAACH,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArE,MAAP;AACA;;AAED,WACC;AAAG,MAAA,GAAG,EAAEI,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,CAAC,GAAC,CADJ,QACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,EAAE,CAACI,IAAH,IAAW,gBAAf,CADR,WAESF,IAFT,CADD;AAMA,GAxBqB,CAAtB;AA0BA,SACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,eADF,CAFD,EAMC;AACC,IAAA,SAAS,EAAC,sBADX;AAEC,mBAAY,OAFb;AAGC,IAAA,OAAO,EAAEL,KAAK,CAACI,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAcA","sourcesContent":["export function TransactionMonitor(props) {\n\tif (!props.monitorArray instanceof Array || props.monitorArray.length < 1) {\n\t\treturn(\n\t\t\t<div className=\"modal is-active\">\n\t\t\t\t<div className=\"modal-background\"></div>\n\t\t\t\t<div className=\"modal-content\"> \n\t\t\t\t\t<p>No transaction found</p>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"modal-close is-large\" \n\t\t\t\t\tarial-label=\"close\"\n\t\t\t\t\tonClick={props.onClick}\n\t\t\t\t></button>\t\n\t\t\t</div>\n\t\t)\n\t} \n\n\tlet transactionList = props.monitorArray.map( (tx, i) => {\n\t\tlet icon;\n\t\tif (tx.status == \"pending\") {\n\t\t\ticon = <span className=\"has-text-link fas fa-exclamation-circle\"></span>;\n\n\t\t} else if (tx.status == \"processing\") {\n\t\t\n\t\t\ticon = <span className=\"has-text-primary fas fa-spinner fa-spin\"></span>;\n\t\t\n\t\t} else if (tx.status == \"success\") {\n\t\t\n\t\t\ticon = <span className=\"has-text-success fas fa-check-circle\"></span>;\n\t\t\n\t\t} else {\n\n\t\t\ticon = <span> <span className=\"has-text-danger fas fa-times-circle\"></span> <button className=\"button is-danger is-small\" data-index={i} onClick={tx.onClick}> retry </button> </span>;\n\t\t}\n\n\t\treturn (\n\t\t\t<p key={i}>\n\t\t\t\t{i+1}. <i>{tx.hash || \"txhash unknown\"}</i> \n\t\t\t\t&nbsp; {icon}\n\t\t\t</p>\n\t\t);\n\t} )\n\n\treturn (\n\t\t<div className=\"modal is-active\">\n\t\t\t<div className=\"modal-background\"></div>\n\t\t\t<div className=\"modal-content\"> \n\t\t\t\t{transactionList}\n\t\t\t</div>\n\t\t\n\t\t\t<button \n\t\t\t\tclassName=\"modal-close is-large\" \n\t\t\t\tarial-label=\"close\"\n\t\t\t\tonClick={props.onClick}\n\t\t\t></button>\t\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}