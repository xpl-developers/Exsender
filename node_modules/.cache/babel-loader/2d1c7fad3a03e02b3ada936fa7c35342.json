{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/pages/token-distributor.js\";\nimport React from \"react\";\nimport Page from '../layouts/Main';\nimport { Input, Button, FileInput, TextArea, MultipleCheckBoxes } from '../components/FormElements';\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\nimport { ConnectedContractProps } from '../components/Contract';\nimport Processing from '../components/LoadingIndicator';\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\nvar xplAddress = \"0x2d213012e19f1433cb394ae6faba1c6a71ad1690\";\n\nvar TokenDistributor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TokenDistributor, _React$Component);\n\n  function TokenDistributor(props) {\n    var _this;\n\n    _classCallCheck(this, TokenDistributor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TokenDistributor).call(this, props));\n    _this.contractProps = {\n      contractName: \"\",\n      contractDecimals: \"\",\n      contractSymbol: \"\",\n      addressBalance: \"\",\n      distributorContractAllowance: \"\"\n    };\n    _this.newDistribution = {\n      selectedFileName: \"No file selected\",\n      textAreaWithAddresses: \"\",\n      tokenAmount: \"\",\n      totalAmount: \"\",\n      totalAddresses: \"\"\n    };\n    _this.state = _objectSpread({\n      isUnifiedAmount: true,\n      isWeb3Browser: false,\n      web3BrowserConnected: false,\n      isProcessing: false,\n      contractAddress: \"\"\n    }, _this.contractProps, _this.newDistribution);\n    _this.toggleAmount = _this.toggleAmount.bind(_assertThisInitialized(_this));\n    _this.unlockBrowser = _this.unlockBrowser.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this)); // this.fileInput = React.createRef();\n\n    return _this;\n  }\n\n  _createClass(TokenDistributor, [{\n    key: \"toggleAmount\",\n    value: function toggleAmount() {\n      this.setState({\n        isUnifiedAmount: !this.state.isUnifiedAmount\n      });\n    }\n  }, {\n    key: \"unlockBrowser\",\n    value: function unlockBrowser() {\n      var self = this;\n      Web3ConnectionHandler.enableWeb3Browser().then(function () {\n        self.setState({\n          web3BrowserConnected: true\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var self = this; //handle addresses\n\n      if (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n        return window.alert(\"ETH Addresses must be comma separated and not empty.\");\n      } // handle amount\n\n\n      var sumAmount;\n\n      if (self.state.isUnifiedAmount) {\n        if (!Number(this.state.tokenAmount)) {\n          return window.alert(\"Invalid amount of token.\");\n        }\n\n        sumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n      } else {\n        if (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n          return window.alert(\"Amount is splitted and amount must be comma separated.\");\n        }\n\n        if (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n          return window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n        }\n\n        sumAmount = self.state.tokenAmount.reduce(function (acc, curr) {\n          return acc + curr;\n        });\n      }\n\n      console.log(sumAmount, self.state.addressBalance); //handle contract address\n\n      var contractReady = self.state.contractAddress && self.state.contractDecimals !== \"\";\n      var hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n      if (!contractReady) {\n        var message = \"Contract address is invalid\";\n        return window.alert(message);\n      } else if (!hasEnoughBalance) {\n        var _message = \"You do not have enough balance.\";\n        return window.alert(_message);\n      } // window.alert(\"Contract is ready to be sent\");\n\n\n      self.handleDistribution();\n    }\n  }, {\n    key: \"handleDistribution\",\n    value: function handleDistribution() {\n      var self = this;\n\n      if (self.state.distributorContractAllowance < 1) {\n        Web3ConnectionHandler.approveSpender(self.state.contractAddress, self.state.addressBalance * Math.pow(10, self.state.contractDecimals)).then(function (txHash) {\n          self.setState({\n            isProcessing: true\n          });\n          return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n        }).then(function (txReceipt) {\n          if (txReceipt.status == \"0x0\") {\n            //transaction failed!\n            return window.alert(\"Approval transaction failed.\");\n          }\n\n          self.setState({\n            distributorContractAllowance: self.state.addressBalance\n          });\n\n          if (self.state.isUnifiedAmount) {\n            self.handleDistributionWithUnifiedAmount();\n          } else {\n            self.handleDistributionWithSplittedAmount();\n          }\n        }).catch(function (err) {\n          window.alert(\"error occurred\", err);\n        }).finally(function () {\n          self.setState({\n            isProcessing: false\n          });\n        });\n      } else {\n        if (self.state.isUnifiedAmount) {\n          self.handleDistributionWithUnifiedAmount();\n        } else {\n          self.handleDistributionWithSplittedAmount();\n        }\n      }\n    }\n  }, {\n    key: \"handleDistributionWithSplittedAmount\",\n    value: function handleDistributionWithSplittedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n      chunkAmount = chunkAmount.map(function (amt) {\n        return amt * Math.pow(10, self.state.contractDecimals);\n      });\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      self.setState({\n        isProcessing: true\n      });\n      Web3ConnectionHandler.distributeToken(\"distributeForeignTokenWithAmount\", self.state.contractAddress, chunkAddresses, chunkAmount).then(function (txHash) {\n        console.log(\"txHash\", txHash);\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        } //call the next transaction\n\n\n        self.handleDistributionWithSplittedAmount(iterator + 1);\n      }).catch(function (err) {\n        window.alert(\"Error occurred at transaction index \" + iterator);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false\n        });\n      });\n    }\n  }, {\n    key: \"handleDistributionWithUnifiedAmount\",\n    value: function handleDistributionWithUnifiedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      Web3ConnectionHandler.distributeToken(\"distributeForeignToken\", self.state.contractAddress, chunkAddresses, amount).then(function (txHash) {\n        self.setState({\n          isProcessing: true\n        });\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        } //call the next transaction\n\n\n        self.handleDistributionWithUnifiedAmount(iterator + 1);\n      }).catch(function (err) {\n        window.alert(\"Error occurred at transaction index \" + iterator);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false\n        });\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n\n      if (name == \"contractAddress\") {\n        this.handleContractAddress(value);\n      } else if (name == \"textAreaWithAddresses\") {\n        this.handleAddresses(value);\n      } else if (name == \"tokenAmount\") {\n        this.handleAmount(value);\n      }\n    }\n  }, {\n    key: \"handleContractAddress\",\n    value: function () {\n      var _handleContractAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(value) {\n        var validAddress, contractName, contractSymbol, contractDecimals, addressBalance, distributorContractAllowance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                validAddress = Web3ConnectionHandler.validateAddress(value);\n\n                if (!validAddress) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this.setState({\n                  isProcessing: true\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return Web3ConnectionHandler.getContractProp(value, 'name');\n\n              case 6:\n                contractName = _context.sent;\n                _context.next = 9;\n                return Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n              case 9:\n                contractSymbol = _context.sent;\n                _context.next = 12;\n                return Web3ConnectionHandler.getContractProp(value, 'decimals');\n\n              case 12:\n                contractDecimals = _context.sent.toNumber();\n                _context.next = 15;\n                return Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress);\n\n              case 15:\n                _context.t0 = _context.sent.toNumber();\n                _context.t1 = Math.pow(10, contractDecimals);\n                addressBalance = (_context.t0 / _context.t1).toString();\n                _context.next = 20;\n                return Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress);\n\n              case 20:\n                _context.t2 = _context.sent;\n                _context.t3 = Math.pow(10, contractDecimals);\n                distributorContractAllowance = _context.t2 / _context.t3;\n                // update state\n                this.setState({\n                  contractName: contractName,\n                  contractSymbol: contractSymbol,\n                  contractDecimals: contractDecimals,\n                  addressBalance: addressBalance,\n                  distributorContractAllowance: distributorContractAllowance,\n                  contractInputCssClass: \"is-success\"\n                });\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t4 = _context[\"catch\"](3);\n                // console.log(\"Invalid contract Address / Check network\");\n                this.emptyContractProps();\n\n              case 29:\n                _context.prev = 29;\n                this.setState({\n                  isProcessing: false\n                });\n                return _context.finish(29);\n\n              case 32:\n                _context.next = 35;\n                break;\n\n              case 34:\n                this.emptyContractProps();\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 26, 29, 32]]);\n      }));\n\n      function handleContractAddress(_x) {\n        return _handleContractAddress.apply(this, arguments);\n      }\n\n      return handleContractAddress;\n    }()\n  }, {\n    key: \"handleAmount\",\n    value: function handleAmount(amountValue) {\n      var totalAmount;\n\n      if (!this.state.isUnifiedAmount) {\n        var amountsArray = amountValue.replace(/\\s+/g, \"\").split(',');\n        amountsArray = Misc.removeFalsey(amountsArray);\n        var validateAmounts = !amountsArray.some(function (amt) {\n          return !Number(amt);\n        });\n\n        if (validateAmounts) {\n          var amountCount = amountsArray.length;\n          totalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amountsArray,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          self.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      } else if (this.state.isUnifiedAmount) {\n        var amounts = Number(amountValue);\n\n        if (amounts) {\n          totalAmount = \"Unified\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amounts,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          this.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleAddresses\",\n    value: function handleAddresses(addressesValue) {\n      var totalAddresses,\n          addressesArray = addressesValue.replace(/\\s+/g, \"\").split(',');\n      addressesArray = Misc.removeFalsey(addressesArray);\n      var validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\n      if (validAddresses) {\n        totalAddresses = addressesArray.length;\n        this.setState({\n          totalAddresses: totalAddresses,\n          textAreaWithAddresses: addressesArray,\n          textAreaWithAddressesInputCssClass: \"is-success\"\n        });\n      } else {\n        this.setState({\n          textAreaWithAddressesInputCssClass: \"is-danger\"\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      var self = this;\n\n      if (name == \"uploadFileInput\") {\n        var uploadElement = document.getElementById(name);\n        var files = uploadElement.files;\n\n        if (files.length > 0) {\n          self.setState({\n            selectedFileName: files[0].name,\n            isProcessing: true\n          });\n          SpreadsheetHelper.readFile(files[0]).then(function (json) {\n            var fileColumn = _this2.state.isUnifiedAmount ? [\"address\"] : [\"address\", \"amount\"];\n            return SpreadsheetHelper.readObjectProperty(json, fileColumn);\n          }).then(function (columnsObject) {\n            if (columnsObject[\"amounts\"]) {\n              self.setState({\n                textAreaWithAddresses: columnsObject[\"addresses\"],\n                tokenAmount: columnsObject[\"amounts\"]\n              });\n            } else {\n              self.setState({\n                textAreaWithAddresses: columnsObject[\"addresses\"]\n              });\n            }\n          }).catch(function (err) {\n            console.log(\"err???\", err);\n          }).finally(function () {\n            self.setState({\n              isProcessing: false\n            });\n            uploadElement.value = \"\";\n          });\n        }\n      } else {\n        self.setState(_defineProperty({}, name, value));\n      }\n    }\n  }, {\n    key: \"emptyContractProps\",\n    value: function emptyContractProps() {\n      this.setState(_objectSpread({\n        contractInputCssClass: \"is-danger\"\n      }, this.contractProps));\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState(_objectSpread({\n        contractAddress: \"\",\n        contractInputCssClass: \"\"\n      }, this.newDistribution, this.contractProps));\n    }\n  }, {\n    key: \"formFields\",\n    value: function formFields() {\n      return {\n        contractAddress: {\n          type: \"text\",\n          name: \"contractAddress\",\n          placeholder: \"Contract Address\",\n          className: this.state.contractInputCssClass + \" is-large\",\n          value: this.state.contractAddress,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        contractDecimals: {\n          type: \"text\",\n          name: \"contractDecimals\",\n          placeholder: \"Decimals\",\n          className: \"is-medium\",\n          readOnly: true,\n          value: this.state.contractDecimals\n        },\n        addressBalance: {\n          type: \"text\",\n          name: \"addressBalance\",\n          placeholder: \"Balance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.addressBalance\n        },\n        distributorContractAllowance: {\n          type: \"text\",\n          name: \"distributorContractAllowance\",\n          placeholder: \"Allowance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.distributorContractAllowance\n        },\n        amountController: [{\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Unified amount\",\n          defaultChecked: true,\n          onChange: this.toggleAmount\n        }, {\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Split amount\",\n          onChange: this.toggleAmount\n        }],\n        uploadFileInput: {\n          name: \"uploadFileInput\",\n          onChange: this.handleChange,\n          label: \"Select a file (optional)\",\n          fileName: this.state.selectedFileName\n        },\n        tokenAmountInput: {\n          type: \"text\",\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass + \" is-large\",\n          value: this.state.tokenAmount,\n          placeholder: \"Amount of token\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        tokenAmountTextArea: {\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass + \" is-large\",\n          value: this.state.tokenAmount,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange,\n          placeholder: \"Comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n          tokenAmountType: \"textarea\"\n        },\n        textAreaWithAddresses: {\n          name: \"textAreaWithAddresses\",\n          className: this.state.textAreaWithAddressesInputCssClass,\n          value: this.state.textAreaWithAddresses,\n          placeholder: \"Comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        submitButton: {\n          type: \"submit\",\n          text: \"Send Transaction\",\n          className: \"button is-large is-link\"\n        },\n        resetButton: {\n          type: \"button\",\n          text: \"Reset\",\n          className: \"button is-medium is-danger\",\n          onClick: this.handleReset\n        }\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Web3ConnectionHandler.checkBrowserCompatibility()) {\n        this.setState({\n          isWeb3Browser: true\n        });\n        this.unlockBrowser();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512\n          },\n          __self: this\n        }, React.createElement(\"section\", {\n          className: \"halfpage-height\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container pl-4 pr-4 mt-4 pb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"is-size-3 has-text-centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        }, \"Token Distributor\"), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"column is-8\",\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"subtitle is-size-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518\n          },\n          __self: this\n        }, \"Token Information\"), React.createElement(Input, _extends({}, this.formFields().contractAddress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().contractDecimals, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().addressBalance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().distributorContractAllowance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529\n          },\n          __self: this\n        })))), React.createElement(MultipleCheckBoxes, {\n          inputArray: this.formFields().amountController,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533\n          },\n          __self: this\n        }), React.createElement(FileInput, _extends({}, this.formFields().uploadFileInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        })), this.state.isUnifiedAmount && React.createElement(Input, _extends({}, this.formFields().tokenAmountInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542\n          },\n          __self: this\n        })), !this.state.isUnifiedAmount && React.createElement(TextArea, _extends({}, this.formFields().tokenAmountTextArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546\n          },\n          __self: this\n        })), React.createElement(TextArea, _extends({}, this.formFields().textAreaWithAddresses, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, React.createElement(Button, _extends({}, this.formFields().submitButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        })), React.createElement(Button, _extends({}, this.formFields().resetButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567\n          },\n          __self: this\n        }, React.createElement(Web3ConnectionProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568\n          },\n          __self: this\n        }), React.createElement(ConnectedContractProps, {\n          contractAddress: this.state.contractAddress,\n          contractName: this.state.contractName,\n          contractSymbol: this.state.contractSymbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570\n          },\n          __self: this\n        }), this.state.isProcessing && React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }), React.createElement(DistributionStat, {\n          totalAmount: this.state.totalAmount,\n          totalAddresses: this.state.totalAddresses,\n          contractSymbol: this.state.contractSymbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }))))));\n      } else if (this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595\n          },\n          __self: this\n        }, React.createElement(LockedWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button is-warning is-large\",\n          onClick: this.unlockBrowser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }, \"Unlock Metamask\")));\n      } else {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }, React.createElement(NoWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return TokenDistributor;\n}(React.Component);\n\nfunction DistributionStat(props) {\n  return React.createElement(\"div\", {\n    className: \"stat is-size-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619\n    },\n    __self: this\n  }, \" Statistics \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, \"Amount counts: \", props.totalAmount || 0, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622\n    },\n    __self: this\n  }), \"Addresses counts: \", props.totalAddresses || 0));\n}\n\nexport default TokenDistributor;","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/pages/token-distributor.js"],"names":["Page","Input","Button","FileInput","TextArea","MultipleCheckBoxes","LockedWeb3Browser","NoWeb3Browser","Web3ConnectionProps","ConnectedContractProps","Processing","SpreadsheetHelper","Web3ConnectionHandler","Misc","xplAddress","TokenDistributor","props","contractProps","contractName","contractDecimals","contractSymbol","addressBalance","distributorContractAllowance","newDistribution","selectedFileName","textAreaWithAddresses","tokenAmount","totalAmount","totalAddresses","state","isUnifiedAmount","isWeb3Browser","web3BrowserConnected","isProcessing","contractAddress","toggleAmount","bind","unlockBrowser","handleBlur","handleChange","handleSubmit","handleReset","setState","self","enableWeb3Browser","then","catch","err","console","log","e","preventDefault","Array","length","window","alert","sumAmount","Number","reduce","acc","curr","contractReady","hasEnoughBalance","message","handleDistribution","approveSpender","Math","pow","txHash","getMinedTransactionReceipt","txReceipt","status","handleDistributionWithUnifiedAmount","handleDistributionWithSplittedAmount","finally","iterator","size","chunkAddresses","slice","chunkAmount","map","amt","distributeToken","amount","target","name","value","handleContractAddress","handleAddresses","handleAmount","validAddress","validateAddress","getContractProp","toNumber","checkBrowserCompatibility","selectedAddress","toString","contractInputCssClass","emptyContractProps","amountValue","amountsArray","replace","split","removeFalsey","validateAmounts","some","amountCount","numberReducer","tokenAmountInputCssClass","amounts","addressesValue","addressesArray","validAddresses","textAreaWithAddressesInputCssClass","uploadElement","document","getElementById","files","readFile","json","fileColumn","readObjectProperty","columnsObject","type","placeholder","className","onBlur","onChange","readOnly","amountController","defaultChecked","uploadFileInput","label","fileName","tokenAmountInput","tokenAmountTextArea","tokenAmountType","submitButton","text","resetButton","onClick","formFields","React","Component","DistributionStat"],"mappings":"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","sourcesContent":["import Page from '../layouts/Main';\n\nimport { Input, Button, FileInput, TextArea, MultipleCheckBoxes } from '../components/FormElements';\n\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\n\nimport { ConnectedContractProps } from '../components/Contract';\nimport Processing from '../components/LoadingIndicator';\n\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\n\nconst xplAddress = \"0x2d213012e19f1433cb394ae6faba1c6a71ad1690\";\n\nclass TokenDistributor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.contractProps = {\n\t\t\tcontractName: \"\",\n\t\t\tcontractDecimals: \"\",\n\t\t\tcontractSymbol: \"\",\n\t\t\taddressBalance: \"\",\n\t\t\tdistributorContractAllowance: \"\",\n\t\t}\n\t\tthis.newDistribution = {\n\t\t\tselectedFileName: \"No file selected\",\n\t\t\ttextAreaWithAddresses: \"\",\n\t\t\ttokenAmount: \"\",\n\t\t\ttotalAmount: \"\",\n\t\t\ttotalAddresses: \"\"\n\t\t}\n\n\t\tthis.state = {\n\t\t\tisUnifiedAmount: true, \n\t\t\tisWeb3Browser: false, \n\t\t\tweb3BrowserConnected: false,\n\t\t\tisProcessing: false,\n\t\t\tcontractAddress: \"\",\n\t\t\t...this.contractProps,\n\t\t\t...this.newDistribution\n\t\t};\n\n\t\tthis.toggleAmount = this.toggleAmount.bind(this);\n\t\tthis.unlockBrowser = this.unlockBrowser.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleReset = this.handleReset.bind(this);\n\n\t\t// this.fileInput = React.createRef();\n\t}\n\t\n\ttoggleAmount() {\n\t\tthis.setState({\n\t\t\tisUnifiedAmount: !this.state.isUnifiedAmount\n\t\t})\n\t}\n\n\tunlockBrowser() {\n\t\tlet self = this;\n\t\tWeb3ConnectionHandler.enableWeb3Browser()\n\t\t.then(function() {\n\t\t\tself.setState({web3BrowserConnected: true});\n\t\t})\n\t\t.catch(function(err){\n\t\t\tconsole.log(err)\n\t\t})\n\t}\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tlet self = this;\n\t\t//handle addresses\n\t\tif (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n\t\t\t\n\t\t\treturn window.alert(\"ETH Addresses must be comma separated and not empty.\");\n\t\t}\n\n\t\t// handle amount\n\t\tlet sumAmount;\n\t\tif (self.state.isUnifiedAmount) {\n\t\t\tif (!Number(this.state.tokenAmount)) {\n\t\t\t\treturn window.alert(\"Invalid amount of token.\");\n\t\t\t} \n\t\t\tsumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n\t\t} else {\n\t\t\tif (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n\t\t\t\t\n\t\t\t\treturn window.alert(\"Amount is splitted and amount must be comma separated.\");\n\t\t\t} \n\t\t\tif (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n\t\t\t\treturn window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n\t\t\t} \n\t\t\tsumAmount = self.state.tokenAmount.reduce((acc, curr) => acc + curr);\n\t\t}\n\t\tconsole.log(sumAmount, self.state.addressBalance);\n\t\t//handle contract address\n\n\t\tlet contractReady = self.state.contractAddress && (self.state.contractDecimals !== \"\");\n\t\tlet hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n\t\tif (!contractReady) {\n\t\t\tlet message = \"Contract address is invalid\";\n\t\t\treturn window.alert(message);\n\t\t} else if (!hasEnoughBalance) {\n\t\t\tlet message = \"You do not have enough balance.\";\n\t\t\treturn window.alert(message);\n\t\t}\n\t\t// window.alert(\"Contract is ready to be sent\");\n\t\tself.handleDistribution();\n\t}\n\thandleDistribution() {\n\t\tlet self = this;\n\t\tif (self.state.distributorContractAllowance < 1) {\n\t\t\tWeb3ConnectionHandler.approveSpender(\n\t\t\t\tself.state.contractAddress,\n\t\t\t\t(self.state.addressBalance * Math.pow(10, self.state.contractDecimals))\n\t\t\t)\n\t\t\t.then(txHash => {\n\t\t\t\tself.setState({isProcessing: true});\n\t\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t\t})\n\t\t\t.then(txReceipt => {\n\t\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t\t//transaction failed!\n\t\t\t\t\treturn window.alert(\"Approval transaction failed.\");\n\t\t\t\t}\n\t\t\t\tself.setState({\n\t\t\t\t\tdistributorContractAllowance: self.state.addressBalance\n\t\t\t\t});\n\n\t\t\t\tif (self.state.isUnifiedAmount) {\n\t\t\t\t\tself.handleDistributionWithUnifiedAmount();\n\t\t\t\t} else {\n\t\t\t\t\tself.handleDistributionWithSplittedAmount();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\twindow.alert(\"error occurred\", err);\n\t\t\t})\n\t\t\t.finally (() => {\n\t\t\t\tself.setState({isProcessing: false});\n\t\t\t}) \n\t\t} else {\n\t\t\tif (self.state.isUnifiedAmount) {\n\t\t\t\tself.handleDistributionWithUnifiedAmount();\n\t\t\t} else {\n\t\t\t\tself.handleDistributionWithSplittedAmount();\n\t\t\t}\n\t\t}\n\t}\n\thandleDistributionWithSplittedAmount(iterator = 0, size = 300) {\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\n\t\tlet chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n\n\t\t\tchunkAmount = chunkAmount.map(amt => amt * Math.pow(10, self.state.contractDecimals));\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\t\tself.setState({isProcessing: true});\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignTokenWithAmount\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tchunkAmount\n\t\t)\n\t\t.then(txHash => {\n\t\t\tconsole.log(\"txHash\", txHash)\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithSplittedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false});\n\t\t}) \n\t}\n\thandleDistributionWithUnifiedAmount(iterator = 0, size = 300) {\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\t\t\n\t\tlet amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignToken\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tamount\n\t\t)\n\t\t.then(txHash => {\n\t\t\tself.setState({isProcessing: true});\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithUnifiedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false});\n\t\t}) \n\t}\n\n\thandleBlur(e) {\n\t\tlet {name, value} = e.target;\n\t\tthis.setState({[name]: value});\n\n\t\tif ( name == \"contractAddress\" ) {\n\t\t\tthis.handleContractAddress(value);\n\t\t} else if ( name == \"textAreaWithAddresses\" ) {\n\t\t\tthis.handleAddresses(value);\n\t\t} else if ( name == \"tokenAmount\" ) {\n\t\t\tthis.handleAmount(value);\n\t\t}\n\t}\n\tasync handleContractAddress(value) {\n\t\tlet validAddress = Web3ConnectionHandler.validateAddress(value);\n\n\t\tif( validAddress ) {\n\t\t\tthis.setState({isProcessing: true});\n\t\t\ttry {\n\t\t\t\tlet contractName = await Web3ConnectionHandler.getContractProp(value, 'name');\n\t\t\t\t\n\t\t\t\tlet contractSymbol = await Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n\t\t\t\tlet contractDecimals = (await Web3ConnectionHandler.getContractProp(value, 'decimals')).toNumber();\n\t\t\t\t\n\t\t\t\tlet addressBalance = ((await Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress)).toNumber() / Math.pow(10, contractDecimals)).toString();\n\n\t\t\t\tlet distributorContractAllowance = (await Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress)) / Math.pow(10, contractDecimals);\n\t\t\t\t\n\t\t\t\t// update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tcontractName,\n\t\t\t\t\tcontractSymbol,\n\t\t\t\t\tcontractDecimals,\n\t\t\t\t\taddressBalance,\n\t\t\t\t\tdistributorContractAllowance,\n\t\t\t\t\tcontractInputCssClass: \"is-success\"\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// console.log(\"Invalid contract Address / Check network\");\n\t\t\t\tthis.emptyContractProps();\n\t\t\t} finally {\n\t\t\t\tthis.setState({isProcessing: false});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.emptyContractProps();\n\t\t}\n\t}\n\thandleAmount(amountValue) {\n\t\tlet totalAmount;\n\n\t\tif ( !this.state.isUnifiedAmount ) {\n\t\t\tlet amountsArray = (amountValue.replace(/\\s+/g, \"\")).split(',');\n\t\t\t\tamountsArray = Misc.removeFalsey(amountsArray);\n\n\t\t\tlet validateAmounts = !amountsArray.some( amt => !Number(amt) );\n\n\t\t\tif ( validateAmounts ) {\n\t\t\t\t\n\t\t\t\tlet amountCount = amountsArray.length;\n\t\t\t\ttotalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amountsArray,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( this.state.isUnifiedAmount ) {\n\t\t\tlet amounts = Number(amountValue);\n\t\t\tif ( amounts ) {\n\t\t\t\ttotalAmount = \"Unified\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amounts,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\thandleAddresses(addressesValue) {\n\t\tlet totalAddresses,\n\t\t\taddressesArray = (addressesValue.replace(/\\s+/g, \"\")).split(',');\n\n\t\t\taddressesArray = Misc.removeFalsey(addressesArray);\n\t\tlet validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\n\t\tif ( validAddresses ) {\n\t\t\ttotalAddresses = addressesArray.length;\n\t\t\tthis.setState({\n\t\t\t\ttotalAddresses,\n\t\t\t\ttextAreaWithAddresses: addressesArray,\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-success\"\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-danger\"\n\t\t\t});\t\n\t\t}\n\t}\n\thandleChange(e) {\n\t\tlet {name, value} = e.target;\n\t\tlet self = this;\n\n\t\tif (name == \"uploadFileInput\") {\n\t\t\tlet uploadElement = document.getElementById(name);\n\t\t\tlet files = uploadElement.files;\n\n\t\t\tif(files.length > 0 ) {\n\t\t\t\tself.setState({\n\t\t\t\t\tselectedFileName: files[0].name,\n\t\t\t\t\tisProcessing: true\n\t\t\t\t});\n\n\t\t\t\tSpreadsheetHelper.readFile(files[0])\n\t\t\t\t.then( json => {\n\t\t\t\t\tlet fileColumn = this.state.isUnifiedAmount ? [\"address\"] : [\"address\", \"amount\"];\n\n\t\t\t\t\treturn SpreadsheetHelper.readObjectProperty(json, fileColumn);\n\t\t\t\t})\n\t\t\t\t.then( columnsObject => {\n\t\t\t\t\tif ( columnsObject[\"amounts\"] ) {\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"],\n\t\t\t\t\t\t\ttokenAmount: columnsObject[\"amounts\"]\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"]\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch( err => {\n\t\t\t\t\tconsole.log(\"err???\", err)\n\t\t\t\t})\n\t\t\t\t.finally(() =>  {\n\t\t\t\t\tself.setState({isProcessing: false});\n\t\t\t\t\tuploadElement.value = \"\";\n\t\t\t\t}) \n\n\t\t\t}\n\n\n\t\t} else {\n\n\t\t\tself.setState({[name]: value});\t\n\t\t} \n\t\t\n\t}\n\n\temptyContractProps() {\n\t\tthis.setState({\n\t\t\tcontractInputCssClass: \"is-danger\",\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\n\thandleReset() {\n\t\tthis.setState({\n\t\t\tcontractAddress: \"\",\n\t\t\tcontractInputCssClass: \"\",\n\t\t\t...this.newDistribution,\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\n\tformFields() {\n\t\treturn {\n\t\t\tcontractAddress: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractAddress\",\n\t\t\t\tplaceholder: \"Contract Address\",\n\t\t\t\tclassName: this.state.contractInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.contractAddress,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tcontractDecimals: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractDecimals\",\n\t\t\t\tplaceholder: \"Decimals\",\n\t\t\t\tclassName: \"is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.contractDecimals\n\t\t\t},\n\t\t\taddressBalance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"addressBalance\",\n\t\t\t\tplaceholder: \"Balance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.addressBalance\n\t\t\t},\n\t\t\tdistributorContractAllowance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"distributorContractAllowance\",\n\t\t\t\tplaceholder: \"Allowance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.distributorContractAllowance\n\n\t\t\t},\n\t\t\tamountController: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Unified amount\",\n\t\t\t\t\tdefaultChecked: true,\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Split amount\",\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t}\n\t\t\t],\n\t\t\tuploadFileInput: {\n\t\t\t\tname: \"uploadFileInput\",\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tlabel: \"Select a file (optional)\",\n\t\t\t\tfileName: this.state.selectedFileName\n\t\t\t},\n\t\t\ttokenAmountInput: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tplaceholder: \"Amount of token\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\ttokenAmountTextArea: {\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tplaceholder: \"Comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n\t\t\t\ttokenAmountType: \"textarea\",\n\t\t\t},\n\n\t\t\ttextAreaWithAddresses: {\n\t\t\t\tname: \"textAreaWithAddresses\",\n\t\t\t\tclassName: this.state.textAreaWithAddressesInputCssClass,\n\t\t\t\tvalue: this.state.textAreaWithAddresses,\n\t\t\t\tplaceholder: \"Comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tsubmitButton: {\n\t\t\t\ttype: \"submit\",\n\t\t\t\ttext: \"Send Transaction\",\n\t\t\t\tclassName: \"button is-large is-link\",\n\t\t\t},\n\t\t\tresetButton: {\n\t\t\t\ttype: \"button\",\n\t\t\t\ttext: \"Reset\",\n\t\t\t\tclassName: \"button is-medium is-danger\",\n\t\t\t\tonClick: this.handleReset\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (Web3ConnectionHandler.checkBrowserCompatibility()) {\n\t\t\tthis.setState({isWeb3Browser: true});\n\t\t\tthis.unlockBrowser();\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<section className=\"halfpage-height\">\n\t\t\t\t\t\t<div className=\"container pl-4 pr-4 mt-4 pb-4\">\n\t\t\t\t\t\t\t<h1 className=\"is-size-3 has-text-centered\">Token Distributor</h1>\n\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t<form className=\"column is-8\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t<h2 className=\"subtitle is-size-4\">Token Information</h2>\n\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractAddress} />\n\n\t\t\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractDecimals} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().addressBalance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().distributorContractAllowance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<MultipleCheckBoxes \n\t\t\t\t\t\t\t\t\t\tinputArray={this.formFields().amountController}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().uploadFileInput} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().tokenAmountInput} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t!this.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().tokenAmountTextArea} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().textAreaWithAddresses} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"control buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().submitButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().resetButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<Web3ConnectionProps />\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<ConnectedContractProps\n\t\t\t\t\t\t\t\t\t\tcontractAddress={this.state.contractAddress}\n\t\t\t\t\t\t\t\t\t\tcontractName={this.state.contractName}\n\t\t\t\t\t\t\t\t\t\tcontractSymbol={this.state.contractSymbol}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{ this.state.isProcessing &&\n\t\t\t\t\t\t\t\t\t\t<Processing />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t\t<DistributionStat\n\t\t\t\t\t\t\t\t\t\ttotalAmount = {this.state.totalAmount}\n\t\t\t\t\t\t\t\t\t\ttotalAddresses = {this.state.totalAddresses}\n\t\t\t\t\t\t\t\t\t\tcontractSymbol = {this.state.contractSymbol}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</Page>\t\n\t\t\t)\n\t\t} else if (this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<LockedWeb3Browser>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"button is-warning is-large\"\n\t\t\t\t\t\t\tonClick={this.unlockBrowser}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tUnlock Metamask\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</LockedWeb3Browser>\n\t\t\t\t</Page>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<NoWeb3Browser />\n\t\t\t\t</Page>\n\t\t\t) \n\t\t}\n\t}\n}\n\nfunction DistributionStat(props) {\n\treturn (\n\t\t\t<div className=\"stat is-size-6\">\n\t\t\t\t<h3><b> Statistics </b></h3>\n\t\t\t\t\n\t\t\t\t<p>\n\t\t\t\t\tAmount counts: {props.totalAmount || 0} <br/>\n\t\t\t\t\tAddresses counts: {props.totalAddresses || 0} \n\t\t\t\t</p>\n\t\t\t</div>\n\t)\n}\n\nexport default TokenDistributor;"]},"metadata":{},"sourceType":"module"}