{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/pages/token-distributor.js\";\nimport React from \"react\";\nimport Page from '../layouts/Main';\nimport { Input, Button, FileInput, TextArea, MultipleCheckBoxes } from '../components/FormElements';\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\nimport { ConnectedContractProps } from '../components/Contract';\nimport { TransactionMonitor } from '../components/TransactionMonitor';\nimport SubHeader from '../components/SubHeader';\nimport Processing from '../components/LoadingIndicator';\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\nvar xplAddress = \"0x2d213012e19f1433cb394ae6faba1c6a71ad1690\";\n\nvar TokenDistributor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TokenDistributor, _React$Component);\n\n  function TokenDistributor(props) {\n    var _this;\n\n    _classCallCheck(this, TokenDistributor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TokenDistributor).call(this, props));\n    _this.contractProps = {\n      contractName: \"\",\n      contractDecimals: \"\",\n      contractSymbol: \"\",\n      addressBalance: \"\",\n      distributorContractAllowance: \"\"\n    };\n    _this.newDistribution = {\n      selectedFileName: \"No file selected\",\n      textAreaWithAddresses: \"\",\n      tokenAmount: \"\",\n      totalAmount: \"\",\n      totalAddresses: \"\"\n    };\n    _this.state = _objectSpread({\n      isUnifiedAmount: true,\n      isWeb3Browser: false,\n      web3BrowserConnected: false,\n      isProcessing: false,\n      contractAddress: \"\",\n      showTransactionMonitor: false,\n      transactionBatch: \"\",\n      transferPerBatch: 10\n    }, _this.contractProps, _this.newDistribution);\n    _this.toggleAmount = _this.toggleAmount.bind(_assertThisInitialized(_this));\n    _this.toggleTransactionMonitor = _this.toggleTransactionMonitor.bind(_assertThisInitialized(_this));\n    _this.restartDistribution = _this.restartDistribution.bind(_assertThisInitialized(_this));\n    _this.unlockBrowser = _this.unlockBrowser.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this)); // this.fileInput = React.createRef();\n\n    return _this;\n  }\n\n  _createClass(TokenDistributor, [{\n    key: \"toggleAmount\",\n    value: function toggleAmount() {\n      this.setState({\n        isUnifiedAmount: !this.state.isUnifiedAmount\n      });\n    }\n  }, {\n    key: \"toggleTransactionMonitor\",\n    value: function toggleTransactionMonitor() {\n      this.setState({\n        showTransactionMonitor: !this.state.showTransactionMonitor\n      });\n    }\n  }, {\n    key: \"restartDistribution\",\n    value: function restartDistribution(e) {\n      var iterator = e.target.getAttribute(\"data-index\");\n\n      if (this.state.isUnifiedAmount) {\n        this.handleDistributionWithUnifiedAmount(iterator);\n      } else {\n        this.handleDistributionWithSplittedAmount(iterator);\n      }\n    }\n  }, {\n    key: \"updateMonitor\",\n    value: function updateMonitor(index, properties) {\n      this.setState(function (state, props) {\n        var newBatch = _toConsumableArray(state.transactionBatch);\n\n        newBatch[index] = _objectSpread({}, properties);\n        return {\n          transactionBatch: newBatch\n        };\n      });\n    }\n  }, {\n    key: \"unlockBrowser\",\n    value: function unlockBrowser() {\n      var self = this;\n      Web3ConnectionHandler.enableWeb3Browser().then(function () {\n        self.setState({\n          web3BrowserConnected: true\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var self = this; //handle addresses\n\n      if (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n        return window.alert(\"ETH Addresses must be comma separated and not empty.\");\n      } // handle amount\n\n\n      var sumAmount;\n\n      if (self.state.isUnifiedAmount) {\n        if (!Number(this.state.tokenAmount)) {\n          return window.alert(\"Invalid amount of token.\");\n        }\n\n        sumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n      } else {\n        if (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n          return window.alert(\"Amount is splitted and amount must be comma separated.\");\n        }\n\n        if (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n          return window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n        }\n\n        sumAmount = self.state.tokenAmount.reduce(Misc.numberReducer);\n      } //handle contract address\n\n\n      var contractReady = self.state.contractAddress && self.state.contractDecimals !== \"\";\n      var hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n      if (!contractReady) {\n        var message = \"Contract address is invalid\";\n        return window.alert(message);\n      } else if (!hasEnoughBalance) {\n        var _message = \"You do not have enough balance.\";\n        return window.alert(_message);\n      } // window.alert(\"Contract is ready to be sent\");\n\n\n      self.handleDistribution();\n    }\n  }, {\n    key: \"handleDistribution\",\n    value: function handleDistribution() {\n      var self = this;\n\n      var init = function init() {\n        if (self.state.isUnifiedAmount) {\n          self.handleDistributionWithUnifiedAmount();\n        } else {\n          self.handleDistributionWithSplittedAmount();\n        } // update transactionBatch\n\n\n        var batches = [],\n            length = Math.ceil(self.state.textAreaWithAddresses.length / self.state.transferPerBatch);\n\n        for (var i = 0; i < length; i++) {\n          var temp = {\n            status: \"pending\",\n            hash: \"waiting for broadcast\"\n          };\n          batches[i] = temp;\n        }\n\n        self.setState({\n          transactionBatch: batches,\n          showTransactionMonitor: true\n        });\n      };\n\n      if (self.state.distributorContractAllowance < 1) {\n        Web3ConnectionHandler.approveSpender(self.state.contractAddress, self.state.addressBalance * Math.pow(10, self.state.contractDecimals)).then(function (txHash) {\n          self.setState({\n            isProcessing: true\n          });\n          return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n        }).then(function (txReceipt) {\n          if (txReceipt.status == \"0x0\") {\n            //transaction failed!\n            return window.alert(\"Approval transaction failed.\");\n          }\n\n          self.setState({\n            distributorContractAllowance: self.state.addressBalance\n          });\n          init();\n        }).catch(function (err) {\n          window.alert(\"error occurred\", err);\n        }).finally(function () {\n          self.setState({\n            isProcessing: false\n          });\n        });\n      } else {\n        init();\n      }\n    }\n  }, {\n    key: \"handleDistributionWithSplittedAmount\",\n    value: function handleDistributionWithSplittedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.transferPerBatch;\n      iterator = Number(iterator);\n      size = Number(size);\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n      chunkAmount = chunkAmount.map(function (amt) {\n        return amt * Math.pow(10, self.state.contractDecimals);\n      });\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      self.setState({\n        isProcessing: true\n      });\n      Web3ConnectionHandler.distributeToken(\"distributeForeignTokenWithAmount\", self.state.contractAddress, chunkAddresses, chunkAmount).then(function (txHash) {\n        self.updateMonitor(iterator, {\n          status: \"processing\",\n          hash: txHash\n        });\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          self.updateMonitor(iterator, {\n            hash: txReceipt.transactionHash,\n            onClick: self.restartDistribution\n          });\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        }\n\n        self.updateMonitor(iterator, {\n          status: \"success\",\n          hash: txReceipt.transactionHash\n        }); //call the next transaction\n\n        self.handleDistributionWithSplittedAmount(iterator + 1);\n      }).catch(function (err) {\n        self.updateMonitor(iterator, {\n          hash: \"txhash unknown\",\n          onClick: self.restartDistribution\n        });\n        window.alert(\"Error occurred at transaction index \" + iterator);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false\n        });\n      });\n    }\n  }, {\n    key: \"handleDistributionWithUnifiedAmount\",\n    value: function handleDistributionWithUnifiedAmount() {\n      var iterator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.transferPerBatch;\n      iterator = Number(iterator);\n      size = Number(size);\n      var self = this;\n      var chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n      var amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n      if (!chunkAddresses.length) {\n        return window.alert(\"Distribution completed!\");\n      }\n\n      self.setState({\n        isProcessing: true\n      });\n      Web3ConnectionHandler.distributeToken(\"distributeForeignToken\", self.state.contractAddress, chunkAddresses, amount).then(function (txHash) {\n        self.updateMonitor(iterator, {\n          status: \"processing\",\n          hash: txHash\n        });\n        return Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n      }).then(function (txReceipt) {\n        if (txReceipt.status == \"0x0\") {\n          //transaction failed!\n          self.updateMonitor(iterator, {\n            hash: txReceipt.transactionHash,\n            onClick: self.restartDistribution\n          });\n          return window.alert(\"Transaction at index \" + iterator + \" failed.\");\n        }\n\n        self.updateMonitor(iterator, {\n          status: \"success\",\n          hash: txReceipt.transactionHash\n        }); //call the next transaction\n\n        self.handleDistributionWithUnifiedAmount(iterator + 1);\n      }).catch(function (err) {\n        self.updateMonitor(iterator, {\n          hash: \"txhash unknown\",\n          onClick: self.restartDistribution\n        });\n        window.alert(\"Error occurred at transaction index \" + iterator);\n        console.log(err);\n      }).finally(function () {\n        self.setState({\n          isProcessing: false\n        });\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n\n      if (name == \"contractAddress\") {\n        this.handleContractAddress(value);\n      } else if (name == \"textAreaWithAddresses\") {\n        this.handleAddresses(value);\n      } else if (name == \"tokenAmount\") {\n        this.handleAmount(value);\n      }\n    }\n  }, {\n    key: \"handleContractAddress\",\n    value: function () {\n      var _handleContractAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(value) {\n        var validAddress, contractName, contractSymbol, contractDecimals, addressBalance, distributorContractAllowance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                validAddress = Web3ConnectionHandler.validateAddress(value);\n\n                if (!validAddress) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this.setState({\n                  isProcessing: true\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return Web3ConnectionHandler.getContractProp(value, 'name');\n\n              case 6:\n                contractName = _context.sent;\n                _context.next = 9;\n                return Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n              case 9:\n                contractSymbol = _context.sent;\n                _context.next = 12;\n                return Web3ConnectionHandler.getContractProp(value, 'decimals');\n\n              case 12:\n                contractDecimals = _context.sent.toNumber();\n                _context.next = 15;\n                return Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress);\n\n              case 15:\n                _context.t0 = _context.sent.toNumber();\n                _context.t1 = Math.pow(10, contractDecimals);\n                addressBalance = (_context.t0 / _context.t1).toString();\n                _context.next = 20;\n                return Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress);\n\n              case 20:\n                _context.t2 = _context.sent;\n                _context.t3 = Math.pow(10, contractDecimals);\n                distributorContractAllowance = _context.t2 / _context.t3;\n                // update state\n                this.setState({\n                  contractName: contractName,\n                  contractSymbol: contractSymbol,\n                  contractDecimals: contractDecimals,\n                  addressBalance: addressBalance,\n                  distributorContractAllowance: distributorContractAllowance,\n                  contractInputCssClass: \"is-success\"\n                });\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t4 = _context[\"catch\"](3);\n                // console.log(\"Invalid contract Address / Check network\");\n                this.emptyContractProps();\n\n              case 29:\n                _context.prev = 29;\n                this.setState({\n                  isProcessing: false\n                });\n                return _context.finish(29);\n\n              case 32:\n                _context.next = 35;\n                break;\n\n              case 34:\n                this.emptyContractProps();\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 26, 29, 32]]);\n      }));\n\n      function handleContractAddress(_x) {\n        return _handleContractAddress.apply(this, arguments);\n      }\n\n      return handleContractAddress;\n    }()\n  }, {\n    key: \"handleAmount\",\n    value: function handleAmount(amountValue) {\n      var totalAmount;\n\n      if (!this.state.isUnifiedAmount) {\n        var amountsArray = amountValue.replace(/\\s+/g, \"\").split(',');\n        amountsArray = Misc.removeFalsey(amountsArray);\n        var validateAmounts = !amountsArray.some(function (amt) {\n          return !Number(amt);\n        });\n\n        if (validateAmounts) {\n          var amountCount = amountsArray.length;\n          totalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amountsArray,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          self.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      } else if (this.state.isUnifiedAmount) {\n        var amounts = Number(amountValue);\n\n        if (amounts) {\n          totalAmount = \"Unified\";\n          this.setState({\n            totalAmount: totalAmount,\n            tokenAmount: amounts,\n            tokenAmountInputCssClass: \"is-success\"\n          });\n        } else {\n          this.setState({\n            tokenAmountInputCssClass: \"is-danger\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleAddresses\",\n    value: function handleAddresses(addressesValue) {\n      var totalAddresses,\n          addressesArray = addressesValue.replace(/\\s+/g, \"\").split(',');\n      addressesArray = Misc.removeFalsey(addressesArray);\n      var validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\n      if (validAddresses) {\n        totalAddresses = addressesArray.length;\n        this.setState({\n          totalAddresses: totalAddresses,\n          textAreaWithAddresses: addressesArray,\n          textAreaWithAddressesInputCssClass: \"is-success\"\n        });\n      } else {\n        this.setState({\n          textAreaWithAddressesInputCssClass: \"is-danger\"\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      var self = this;\n\n      if (name == \"uploadFileInput\") {\n        var uploadElement = document.getElementById(name);\n        var files = uploadElement.files;\n\n        if (files.length > 0) {\n          self.setState({\n            selectedFileName: files[0].name,\n            isProcessing: true\n          });\n          SpreadsheetHelper.readFile(files[0]).then(function (json) {\n            var fileColumn = _this2.state.isUnifiedAmount ? [\"address\"] : [\"address\", \"amount\"];\n            return SpreadsheetHelper.readObjectProperty(json, fileColumn);\n          }).then(function (columnsObject) {\n            if (columnsObject[\"amounts\"]) {\n              self.setState({\n                textAreaWithAddresses: columnsObject[\"addresses\"],\n                tokenAmount: columnsObject[\"amounts\"]\n              });\n            } else {\n              self.setState({\n                textAreaWithAddresses: columnsObject[\"addresses\"]\n              });\n            }\n          }).catch(function (err) {\n            console.log(\"err???\", err);\n          }).finally(function () {\n            self.setState({\n              isProcessing: false\n            });\n            uploadElement.value = \"\";\n          });\n        }\n      } else {\n        self.setState(_defineProperty({}, name, value));\n      }\n    }\n  }, {\n    key: \"emptyContractProps\",\n    value: function emptyContractProps() {\n      this.setState(_objectSpread({\n        contractInputCssClass: \"is-danger\"\n      }, this.contractProps));\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState(_objectSpread({\n        contractAddress: \"\",\n        contractInputCssClass: \"\"\n      }, this.newDistribution, this.contractProps));\n    }\n  }, {\n    key: \"formFields\",\n    value: function formFields() {\n      return {\n        contractAddress: {\n          type: \"text\",\n          name: \"contractAddress\",\n          placeholder: \"Contract Address\",\n          className: this.state.contractInputCssClass + \" is-large\",\n          value: this.state.contractAddress,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        contractDecimals: {\n          type: \"text\",\n          name: \"contractDecimals\",\n          placeholder: \"Decimals\",\n          className: \"is-medium\",\n          readOnly: true,\n          value: this.state.contractDecimals\n        },\n        addressBalance: {\n          type: \"text\",\n          name: \"addressBalance\",\n          placeholder: \"Balance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.addressBalance\n        },\n        distributorContractAllowance: {\n          type: \"text\",\n          name: \"distributorContractAllowance\",\n          placeholder: \"Allowance\",\n          className: \"input is-medium\",\n          readOnly: true,\n          value: this.state.distributorContractAllowance\n        },\n        amountController: [{\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Unified amount\",\n          defaultChecked: true,\n          onChange: this.toggleAmount\n        }, {\n          type: \"radio\",\n          name: \"amountController\",\n          placeholder: \"Split amount\",\n          onChange: this.toggleAmount\n        }],\n        uploadFileInput: {\n          name: \"uploadFileInput\",\n          onChange: this.handleChange,\n          label: \"Select a file (optional)\",\n          fileName: this.state.selectedFileName\n        },\n        tokenAmountInput: {\n          type: \"text\",\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass + \" is-large\",\n          value: this.state.tokenAmount,\n          placeholder: \"Amount of token\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        tokenAmountTextArea: {\n          name: \"tokenAmount\",\n          className: this.state.tokenAmountInputCssClass + \" is-large\",\n          value: this.state.tokenAmount,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange,\n          placeholder: \"Comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n          tokenAmountType: \"textarea\"\n        },\n        textAreaWithAddresses: {\n          name: \"textAreaWithAddresses\",\n          className: this.state.textAreaWithAddressesInputCssClass,\n          value: this.state.textAreaWithAddresses,\n          placeholder: \"Comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        },\n        submitButton: {\n          type: \"submit\",\n          text: \"Send Transaction\",\n          className: \"button is-large is-link\"\n        },\n        resetButton: {\n          type: \"button\",\n          text: \"Reset\",\n          className: \"button is-medium is-danger\",\n          onClick: this.handleReset\n        },\n        monitorButton: {\n          type: \"button\",\n          text: \"Show monitor\",\n          className: \"button is-link is-small\",\n          onClick: this.toggleTransactionMonitor\n        }\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Web3ConnectionHandler.checkBrowserCompatibility()) {\n        this.setState({\n          isWeb3Browser: true\n        });\n        this.unlockBrowser();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        }), React.createElement(\"section\", {\n          className: \"halfpage-height\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, React.createElement(ConnectedContractProps, {\n          contractAddress: this.state.contractAddress,\n          contractName: this.state.contractName,\n          contractSymbol: this.state.contractSymbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585\n          },\n          __self: this\n        }, React.createElement(Button, _extends({}, this.formFields().monitorButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"column is-9\",\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().contractAddress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().contractDecimals, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().addressBalance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }, React.createElement(Input, _extends({}, this.formFields().distributorContractAllowance, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603\n          },\n          __self: this\n        })))), React.createElement(MultipleCheckBoxes, {\n          inputArray: this.formFields().amountController,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }), React.createElement(FileInput, _extends({}, this.formFields().uploadFileInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        })), this.state.isUnifiedAmount && React.createElement(Input, _extends({}, this.formFields().tokenAmountInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        })), !this.state.isUnifiedAmount && React.createElement(TextArea, _extends({}, this.formFields().tokenAmountTextArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620\n          },\n          __self: this\n        })), React.createElement(TextArea, _extends({}, this.formFields().textAreaWithAddresses, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, React.createElement(Button, _extends({}, this.formFields().submitButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631\n          },\n          __self: this\n        })), React.createElement(Button, _extends({}, this.formFields().resetButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 634\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641\n          },\n          __self: this\n        }, React.createElement(DistributionStat, {\n          totalAmount: this.state.totalAmount,\n          totalAddresses: this.state.totalAddresses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646\n          },\n          __self: this\n        }), this.state.isProcessing && React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649\n          },\n          __self: this\n        }))))), this.state.showTransactionMonitor && React.createElement(TransactionMonitor, {\n          onClick: this.toggleTransactionMonitor,\n          monitorArray: this.state.transactionBatch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658\n          },\n          __self: this\n        }));\n      } else if (this.state.isWeb3Browser) {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668\n          },\n          __self: this\n        }), React.createElement(LockedWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button is-warning is-large\",\n          onClick: this.unlockBrowser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670\n          },\n          __self: this\n        }, \"Unlock Metamask\")));\n      } else {\n        return React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 681\n          },\n          __self: this\n        }, React.createElement(SubHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 682\n          },\n          __self: this\n        }), React.createElement(NoWeb3Browser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return TokenDistributor;\n}(React.Component);\n\nfunction DistributionStat(props) {\n  return React.createElement(\"div\", {\n    className: \"is-size-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"is-size-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694\n    },\n    __self: this\n  }, \"Amount count: \", props.totalAmount || 0, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695\n    },\n    __self: this\n  }), \"Address count: \", props.totalAddresses || 0));\n}\n\nexport default TokenDistributor;","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/pages/token-distributor.js"],"names":["Page","Input","Button","FileInput","TextArea","MultipleCheckBoxes","LockedWeb3Browser","NoWeb3Browser","Web3ConnectionProps","ConnectedContractProps","TransactionMonitor","SubHeader","Processing","SpreadsheetHelper","Web3ConnectionHandler","Misc","xplAddress","TokenDistributor","props","contractProps","contractName","contractDecimals","contractSymbol","addressBalance","distributorContractAllowance","newDistribution","selectedFileName","textAreaWithAddresses","tokenAmount","totalAmount","totalAddresses","state","isUnifiedAmount","isWeb3Browser","web3BrowserConnected","isProcessing","contractAddress","showTransactionMonitor","transactionBatch","transferPerBatch","toggleAmount","bind","toggleTransactionMonitor","restartDistribution","unlockBrowser","handleBlur","handleChange","handleSubmit","handleReset","setState","e","iterator","target","getAttribute","handleDistributionWithUnifiedAmount","handleDistributionWithSplittedAmount","index","properties","newBatch","self","enableWeb3Browser","then","catch","err","console","log","preventDefault","Array","length","window","alert","sumAmount","Number","reduce","numberReducer","contractReady","hasEnoughBalance","message","handleDistribution","init","batches","Math","ceil","i","temp","status","hash","approveSpender","pow","txHash","getMinedTransactionReceipt","txReceipt","finally","size","chunkAddresses","slice","chunkAmount","map","amt","distributeToken","updateMonitor","transactionHash","onClick","amount","name","value","handleContractAddress","handleAddresses","handleAmount","validAddress","validateAddress","getContractProp","toNumber","checkBrowserCompatibility","selectedAddress","toString","contractInputCssClass","emptyContractProps","amountValue","amountsArray","replace","split","removeFalsey","validateAmounts","some","amountCount","tokenAmountInputCssClass","amounts","addressesValue","addressesArray","validAddresses","textAreaWithAddressesInputCssClass","uploadElement","document","getElementById","files","readFile","json","fileColumn","readObjectProperty","columnsObject","type","placeholder","className","onBlur","onChange","readOnly","amountController","defaultChecked","uploadFileInput","label","fileName","tokenAmountInput","tokenAmountTextArea","tokenAmountType","submitButton","text","resetButton","monitorButton","formFields","React","Component","DistributionStat"],"mappings":"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","sourcesContent":["import Page from '../layouts/Main';\n\nimport { Input, Button, FileInput, TextArea, MultipleCheckBoxes } from '../components/FormElements';\n\nimport { LockedWeb3Browser, NoWeb3Browser, Web3ConnectionProps } from '../components/Web3Status';\nimport { ConnectedContractProps } from '../components/Contract';\nimport { TransactionMonitor } from '../components/TransactionMonitor';\n\nimport SubHeader from '../components/SubHeader';\nimport Processing from '../components/LoadingIndicator';\n\nimport { SpreadsheetHelper } from '../utils/fileHelpers';\nimport { Web3ConnectionHandler } from '../utils/web3-connect';\nimport Misc from '../utils/misc';\n\nconst xplAddress = \"0x2d213012e19f1433cb394ae6faba1c6a71ad1690\";\n\nclass TokenDistributor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.contractProps = {\n\t\t\tcontractName: \"\",\n\t\t\tcontractDecimals: \"\",\n\t\t\tcontractSymbol: \"\",\n\t\t\taddressBalance: \"\",\n\t\t\tdistributorContractAllowance: \"\",\n\t\t}\n\t\tthis.newDistribution = {\n\t\t\tselectedFileName: \"No file selected\",\n\t\t\ttextAreaWithAddresses: \"\",\n\t\t\ttokenAmount: \"\",\n\t\t\ttotalAmount: \"\",\n\t\t\ttotalAddresses: \"\"\n\t\t}\n\n\t\tthis.state = {\n\t\t\tisUnifiedAmount: true, \n\t\t\tisWeb3Browser: false, \n\t\t\tweb3BrowserConnected: false,\n\t\t\tisProcessing: false,\n\t\t\tcontractAddress: \"\",\n\t\t\tshowTransactionMonitor: false,\n\t\t\ttransactionBatch: \"\",\n\t\t\ttransferPerBatch: 10,\n\t\t\t...this.contractProps,\n\t\t\t...this.newDistribution\n\t\t};\n\n\t\tthis.toggleAmount = this.toggleAmount.bind(this);\n\t\tthis.toggleTransactionMonitor = this.toggleTransactionMonitor.bind(this);\n\t\tthis.restartDistribution = this.restartDistribution.bind(this);\n\t\tthis.unlockBrowser = this.unlockBrowser.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleReset = this.handleReset.bind(this);\n\n\t\t// this.fileInput = React.createRef();\n\t}\n\ttoggleAmount() {\n\t\tthis.setState({\n\t\t\tisUnifiedAmount: !this.state.isUnifiedAmount\n\t\t})\n\t}\n\ttoggleTransactionMonitor() {\n\t\tthis.setState({\n\t\t\tshowTransactionMonitor: !this.state.showTransactionMonitor\n\t\t})\n\t}\n\trestartDistribution(e) {\n\t\tlet iterator = e.target.getAttribute(\"data-index\");\n\t\t\n\t\tif (this.state.isUnifiedAmount) {\n\t\t\tthis.handleDistributionWithUnifiedAmount(iterator);\n\t\t} else {\n\t\t\tthis.handleDistributionWithSplittedAmount(iterator);\n\t\t}\n\t}\n\tupdateMonitor(index, properties) {\n\t\tthis.setState((state, props) => {\n\t\t\tlet newBatch = [...state.transactionBatch];\n\t\t\t\tnewBatch[index] = {...properties};\n\t\t\treturn {\n\t\t\t\ttransactionBatch: newBatch\n\t\t\t}\n\t\t});\n\t}\n\tunlockBrowser() {\n\t\tlet self = this;\n\t\tWeb3ConnectionHandler.enableWeb3Browser()\n\t\t.then(function() {\n\t\t\tself.setState({web3BrowserConnected: true});\n\t\t})\n\t\t.catch(function(err) {\n\t\t\tconsole.log(err)\n\t\t})\n\t}\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tlet self = this;\n\t\t//handle addresses\n\t\tif (!(self.state.textAreaWithAddresses instanceof Array) || !(self.state.textAreaWithAddresses.length > 0)) {\n\t\t\treturn window.alert(\"ETH Addresses must be comma separated and not empty.\");\n\t\t}\n\t\t// handle amount\n\t\tlet sumAmount;\n\t\tif (self.state.isUnifiedAmount) {\n\t\t\tif (!Number(this.state.tokenAmount)) {\n\t\t\t\treturn window.alert(\"Invalid amount of token.\");\n\t\t\t} \n\t\t\tsumAmount = this.state.tokenAmount * this.state.textAreaWithAddresses.length;\n\t\t} else {\n\t\t\tif (!(self.state.tokenAmount instanceof Array) || !(self.state.tokenAmount.length > 0)) {\n\t\t\t\treturn window.alert(\"Amount is splitted and amount must be comma separated.\");\n\t\t\t} \n\t\t\tif (self.state.tokenAmount.length != self.state.textAreaWithAddresses.length) {\n\t\t\t\treturn window.alert(\"Amount is splitted and addresses count must be the same with amount count.\");\n\t\t\t} \n\t\t\tsumAmount = self.state.tokenAmount.reduce(Misc.numberReducer);\n\t\t}\n\t\t//handle contract address\n\t\tlet contractReady = self.state.contractAddress && (self.state.contractDecimals !== \"\");\n\t\tlet hasEnoughBalance = self.state.addressBalance >= sumAmount;\n\n\t\tif (!contractReady) {\n\t\t\tlet message = \"Contract address is invalid\";\n\t\t\treturn window.alert(message);\n\t\t} else if (!hasEnoughBalance) {\n\t\t\tlet message = \"You do not have enough balance.\";\n\t\t\treturn window.alert(message);\n\t\t}\n\t\t// window.alert(\"Contract is ready to be sent\");\n\t\tself.handleDistribution();\n\t}\n\thandleDistribution() {\n\t\tlet self = this;\n\n\t\tlet init = () => {\n\t\t\tif (self.state.isUnifiedAmount) {\n\t\t\t\tself.handleDistributionWithUnifiedAmount();\n\t\t\t} else {\n\t\t\t\tself.handleDistributionWithSplittedAmount();\n\t\t\t}\n\n\t\t\t// update transactionBatch\n\t\t\tlet batches = [],\n\t\t\t\tlength = Math.ceil(self.state.textAreaWithAddresses.length / self.state.transferPerBatch);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tlet temp = {status: \"pending\", hash: \"waiting for broadcast\"};\n\t\t\t\tbatches[i] = temp;\n\t\t\t}\n\n\t\t\tself.setState({\n\t\t\t\ttransactionBatch: batches,\n\t\t\t\tshowTransactionMonitor: true\n\t\t\t})\n\t\t}\n\n\t\tif (self.state.distributorContractAllowance < 1) {\n\t\t\tWeb3ConnectionHandler.approveSpender(\n\t\t\t\tself.state.contractAddress,\n\t\t\t\t(self.state.addressBalance * Math.pow(10, self.state.contractDecimals))\n\t\t\t)\n\t\t\t.then(txHash => {\n\t\t\t\tself.setState({isProcessing: true});\n\t\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t\t})\n\t\t\t.then(txReceipt => {\n\t\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t\t//transaction failed!\n\t\t\t\t\treturn window.alert(\"Approval transaction failed.\");\n\t\t\t\t}\n\t\t\t\tself.setState({\n\t\t\t\t\tdistributorContractAllowance: self.state.addressBalance\n\t\t\t\t});\n\n\t\t\t\tinit();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\twindow.alert(\"error occurred\", err);\n\t\t\t})\n\t\t\t.finally (() => {\n\t\t\t\tself.setState({isProcessing: false});\n\t\t\t}) \n\t\t} else {\n\t\t\tinit();\n\t\t}\n\t}\n\thandleDistributionWithSplittedAmount(iterator = 0, size = this.state.transferPerBatch) {\n\t\titerator = Number(iterator);\n\t\tsize = Number(size);\n\t\t\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\n\t\tlet chunkAmount = self.state.tokenAmount.slice(iterator * size, (iterator + 1) * size);\n\n\t\t\tchunkAmount = chunkAmount.map(amt => amt * Math.pow(10, self.state.contractDecimals));\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\t\tself.setState({isProcessing: true});\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignTokenWithAmount\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tchunkAmount\n\t\t)\n\t\t.then(txHash => {\n\t\t\t\n\t\t\tself.updateMonitor(iterator, {status: \"processing\", hash: txHash})\n\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\tself.updateMonitor(iterator, {hash: txReceipt.transactionHash, onClick: self.restartDistribution})\n\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\t\t\t\n\t\t\tself.updateMonitor(iterator, {status: \"success\", hash: txReceipt.transactionHash});\n\t\t\t\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithSplittedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\tself.updateMonitor(iterator, {hash: \"txhash unknown\", onClick: self.restartDistribution})\n\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false});\n\t\t}) \n\t}\n\thandleDistributionWithUnifiedAmount(iterator = 0, size = this.state.transferPerBatch) {\n\t\titerator = Number(iterator);\n\t\tsize = Number(size);\n\n\t\tlet self = this;\n\n\t\tlet chunkAddresses = self.state.textAreaWithAddresses.slice(iterator * size, (iterator + 1) * size);\n\t\t\n\t\tlet amount = self.state.tokenAmount * Math.pow(10, self.state.contractDecimals);\n\n\t\tif (!chunkAddresses.length) {\n\t\t\treturn window.alert(\"Distribution completed!\");\n\t\t}\n\n\t\tself.setState({isProcessing: true});\n\n\t\tWeb3ConnectionHandler.distributeToken(\n\t\t\t\"distributeForeignToken\",\n\t\t\tself.state.contractAddress,\n\t\t\tchunkAddresses,\n\t\t\tamount\n\t\t)\n\t\t.then(txHash => {\n\t\t\tself.updateMonitor(iterator, {status: \"processing\", hash: txHash})\n\n\t\t\treturn Web3ConnectionHandler.getMinedTransactionReceipt(txHash);\n\t\t})\n\t\t.then(txReceipt => {\n\t\t\tif (txReceipt.status == \"0x0\") {\n\t\t\t\t//transaction failed!\n\t\t\t\tself.updateMonitor(iterator, {hash: txReceipt.transactionHash, onClick: self.restartDistribution})\n\n\t\t\t\treturn window.alert(\"Transaction at index \"+iterator+\" failed.\");\n\t\t\t}\n\n\t\t\tself.updateMonitor(iterator, {status: \"success\", hash: txReceipt.transactionHash});\n\t\t\t//call the next transaction\n\t\t\tself.handleDistributionWithUnifiedAmount(iterator + 1);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\tself.updateMonitor(iterator, {hash: \"txhash unknown\", onClick: self.restartDistribution})\n\n\t\t\t\twindow.alert(\"Error occurred at transaction index \"+iterator);\n\t\t\t\tconsole.log(err)\n\t\t})\n\t\t.finally (() => {\n\t\t\tself.setState({isProcessing: false});\n\t\t}) \n\t}\n\thandleBlur(e) {\n\t\tlet {name, value} = e.target;\n\t\tthis.setState({[name]: value});\n\n\t\tif ( name == \"contractAddress\" ) {\n\t\t\tthis.handleContractAddress(value);\n\t\t} else if ( name == \"textAreaWithAddresses\" ) {\n\t\t\tthis.handleAddresses(value);\n\t\t} else if ( name == \"tokenAmount\" ) {\n\t\t\tthis.handleAmount(value);\n\t\t}\n\t}\n\tasync handleContractAddress(value) {\n\t\tlet validAddress = Web3ConnectionHandler.validateAddress(value);\n\n\t\tif( validAddress ) {\n\t\t\tthis.setState({isProcessing: true});\n\t\t\ttry {\n\t\t\t\tlet contractName = await Web3ConnectionHandler.getContractProp(value, 'name');\n\t\t\t\t\n\t\t\t\tlet contractSymbol = await Web3ConnectionHandler.getContractProp(value, 'symbol');\n\n\t\t\t\tlet contractDecimals = (await Web3ConnectionHandler.getContractProp(value, 'decimals')).toNumber();\n\t\t\t\t\n\t\t\t\tlet addressBalance = ((await Web3ConnectionHandler.getContractProp(value, 'balanceOf', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress)).toNumber() / Math.pow(10, contractDecimals)).toString();\n\n\t\t\t\tlet distributorContractAllowance = (await Web3ConnectionHandler.getContractProp(value, 'allowance', Web3ConnectionHandler.checkBrowserCompatibility().selectedAddress, xplAddress)) / Math.pow(10, contractDecimals);\n\t\t\t\t\n\t\t\t\t// update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tcontractName,\n\t\t\t\t\tcontractSymbol,\n\t\t\t\t\tcontractDecimals,\n\t\t\t\t\taddressBalance,\n\t\t\t\t\tdistributorContractAllowance,\n\t\t\t\t\tcontractInputCssClass: \"is-success\"\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// console.log(\"Invalid contract Address / Check network\");\n\t\t\t\tthis.emptyContractProps();\n\t\t\t} finally {\n\t\t\t\tthis.setState({isProcessing: false});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.emptyContractProps();\n\t\t}\n\t}\n\thandleAmount(amountValue) {\n\t\tlet totalAmount;\n\n\t\tif ( !this.state.isUnifiedAmount ) {\n\t\t\tlet amountsArray = (amountValue.replace(/\\s+/g, \"\")).split(',');\n\t\t\t\tamountsArray = Misc.removeFalsey(amountsArray);\n\n\t\t\tlet validateAmounts = !amountsArray.some( amt => !Number(amt) );\n\n\t\t\tif ( validateAmounts ) {\n\t\t\t\t\n\t\t\t\tlet amountCount = amountsArray.length;\n\t\t\t\ttotalAmount = amountCount + \" (\" + amountsArray.reduce(Misc.numberReducer) + \")\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amountsArray,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( this.state.isUnifiedAmount ) {\n\t\t\tlet amounts = Number(amountValue);\n\t\t\tif ( amounts ) {\n\t\t\t\ttotalAmount = \"Unified\";\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAmount,\n\t\t\t\t\ttokenAmount: amounts,\n\t\t\t\t\ttokenAmountInputCssClass: \"is-success\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttokenAmountInputCssClass: \"is-danger\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\thandleAddresses(addressesValue) {\n\t\tlet totalAddresses,\n\t\t\taddressesArray = (addressesValue.replace(/\\s+/g, \"\")).split(',');\n\n\t\t\taddressesArray = Misc.removeFalsey(addressesArray);\n\t\tlet validAddresses = Web3ConnectionHandler.validateAddress(addressesArray);\n\n\t\tif ( validAddresses ) {\n\t\t\ttotalAddresses = addressesArray.length;\n\t\t\tthis.setState({\n\t\t\t\ttotalAddresses,\n\t\t\t\ttextAreaWithAddresses: addressesArray,\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-success\"\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttextAreaWithAddressesInputCssClass: \"is-danger\"\n\t\t\t});\t\n\t\t}\n\t}\n\thandleChange(e) {\n\t\tlet {name, value} = e.target;\n\t\tlet self = this;\n\n\t\tif (name == \"uploadFileInput\") {\n\t\t\tlet uploadElement = document.getElementById(name);\n\t\t\tlet files = uploadElement.files;\n\n\t\t\tif(files.length > 0 ) {\n\t\t\t\tself.setState({\n\t\t\t\t\tselectedFileName: files[0].name,\n\t\t\t\t\tisProcessing: true\n\t\t\t\t});\n\n\t\t\t\tSpreadsheetHelper.readFile(files[0])\n\t\t\t\t.then( json => {\n\t\t\t\t\tlet fileColumn = this.state.isUnifiedAmount ? [\"address\"] : [\"address\", \"amount\"];\n\n\t\t\t\t\treturn SpreadsheetHelper.readObjectProperty(json, fileColumn);\n\t\t\t\t})\n\t\t\t\t.then( columnsObject => {\n\t\t\t\t\tif ( columnsObject[\"amounts\"] ) {\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"],\n\t\t\t\t\t\t\ttokenAmount: columnsObject[\"amounts\"]\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\ttextAreaWithAddresses: columnsObject[\"addresses\"]\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch( err => {\n\t\t\t\t\tconsole.log(\"err???\", err)\n\t\t\t\t})\n\t\t\t\t.finally(() =>  {\n\t\t\t\t\tself.setState({isProcessing: false});\n\t\t\t\t\tuploadElement.value = \"\";\n\t\t\t\t}) \n\n\t\t\t}\n\n\n\t\t} else {\n\n\t\t\tself.setState({[name]: value});\t\n\t\t} \n\t}\n\temptyContractProps() {\n\t\tthis.setState({\n\t\t\tcontractInputCssClass: \"is-danger\",\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\thandleReset() {\n\t\tthis.setState({\n\t\t\tcontractAddress: \"\",\n\t\t\tcontractInputCssClass: \"\",\n\t\t\t...this.newDistribution,\n\t\t\t...this.contractProps\n\t\t});\n\t}\n\tformFields() {\n\t\treturn {\n\t\t\tcontractAddress: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractAddress\",\n\t\t\t\tplaceholder: \"Contract Address\",\n\t\t\t\tclassName: this.state.contractInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.contractAddress,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tcontractDecimals: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"contractDecimals\",\n\t\t\t\tplaceholder: \"Decimals\",\n\t\t\t\tclassName: \"is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.contractDecimals\n\t\t\t},\n\t\t\taddressBalance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"addressBalance\",\n\t\t\t\tplaceholder: \"Balance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.addressBalance\n\t\t\t},\n\t\t\tdistributorContractAllowance: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"distributorContractAllowance\",\n\t\t\t\tplaceholder: \"Allowance\",\n\t\t\t\tclassName: \"input is-medium\",\n\t\t\t\treadOnly: true,\n\t\t\t\tvalue: this.state.distributorContractAllowance\n\n\t\t\t},\n\t\t\tamountController: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Unified amount\",\n\t\t\t\t\tdefaultChecked: true,\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\tname: \"amountController\",\n\t\t\t\t\tplaceholder: \"Split amount\",\n\t\t\t\t\tonChange: this.toggleAmount\n\t\t\t\t}\n\t\t\t],\n\t\t\tuploadFileInput: {\n\t\t\t\tname: \"uploadFileInput\",\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tlabel: \"Select a file (optional)\",\n\t\t\t\tfileName: this.state.selectedFileName\n\t\t\t},\n\t\t\ttokenAmountInput: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tplaceholder: \"Amount of token\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\ttokenAmountTextArea: {\n\t\t\t\tname: \"tokenAmount\",\n\t\t\t\tclassName: this.state.tokenAmountInputCssClass + \" is-large\",\n\t\t\t\tvalue: this.state.tokenAmount,\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange,\n\t\t\t\tplaceholder: \"Comma separated amount in order of addresses \\n240, 50, 100, 10, 75, 13, 5\",\n\t\t\t\ttokenAmountType: \"textarea\",\n\t\t\t},\n\n\t\t\ttextAreaWithAddresses: {\n\t\t\t\tname: \"textAreaWithAddresses\",\n\t\t\t\tclassName: this.state.textAreaWithAddressesInputCssClass,\n\t\t\t\tvalue: this.state.textAreaWithAddresses,\n\t\t\t\tplaceholder: \"Comma separated addresses\\n0x138e326c28114f65202b4ed82a1eecdf81451e09, 0xca353c48ab32b8baba846477d28254309be5e7c6\",\n\t\t\t\tonBlur: this.handleBlur,\n\t\t\t\tonChange: this.handleChange\n\t\t\t},\n\t\t\tsubmitButton: {\n\t\t\t\ttype: \"submit\",\n\t\t\t\ttext: \"Send Transaction\",\n\t\t\t\tclassName: \"button is-large is-link\",\n\t\t\t},\n\t\t\tresetButton: {\n\t\t\t\ttype: \"button\",\n\t\t\t\ttext: \"Reset\",\n\t\t\t\tclassName: \"button is-medium is-danger\",\n\t\t\t\tonClick: this.handleReset\n\t\t\t},\n\t\t\tmonitorButton: {\n\t\t\t\ttype: \"button\",\n\t\t\t\ttext: \"Show monitor\",\n\t\t\t\tclassName: \"button is-link is-small\",\n\t\t\t\tonClick: this.toggleTransactionMonitor\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tif (Web3ConnectionHandler.checkBrowserCompatibility()) {\n\t\t\tthis.setState({isWeb3Browser: true});\n\t\t\tthis.unlockBrowser();\n\t\t}\n\t}\n\trender() {\n\t\tif (this.state.web3BrowserConnected && this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<section className=\"halfpage-height\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<ConnectedContractProps\n\t\t\t\t\t\t\t\t\t\tcontractAddress={this.state.contractAddress}\n\t\t\t\t\t\t\t\t\t\tcontractName={this.state.contractName}\n\t\t\t\t\t\t\t\t\t\tcontractSymbol={this.state.contractSymbol}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().monitorButton}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t<form className=\"column is-9\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractAddress} />\n\n\t\t\t\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().contractDecimals} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().addressBalance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().distributorContractAllowance} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<MultipleCheckBoxes \n\t\t\t\t\t\t\t\t\t\tinputArray={this.formFields().amountController}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().uploadFileInput} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<Input {...this.formFields().tokenAmountInput} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t!this.state.isUnifiedAmount &&\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().tokenAmountTextArea} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t{...this.formFields().textAreaWithAddresses} \n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"control buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().submitButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.formFields().resetButton}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t\t<DistributionStat\n\t\t\t\t\t\t\t\t\t\ttotalAmount = {this.state.totalAmount}\n\t\t\t\t\t\t\t\t\t\ttotalAddresses = {this.state.totalAddresses}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t\t{ this.state.isProcessing &&\n\t\t\t\t\t\t\t\t\t\t<Processing />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.showTransactionMonitor &&\n\t\t\t\t\t\t<TransactionMonitor\n\t\t\t\t\t\t\tonClick={this.toggleTransactionMonitor}\n\t\t\t\t\t\t\tmonitorArray={this.state.transactionBatch}\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t}\n\t\t\t\t</Page>\t\n\t\t\t)\n\t\t} else if (this.state.isWeb3Browser) {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<LockedWeb3Browser>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"button is-warning is-large\"\n\t\t\t\t\t\t\tonClick={this.unlockBrowser}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tUnlock Metamask\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</LockedWeb3Browser>\n\t\t\t\t</Page>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Page>\n\t\t\t\t\t<SubHeader />\n\t\t\t\t\t<NoWeb3Browser />\n\t\t\t\t</Page>\n\t\t\t) \n\t\t}\n\t}\n}\n\nfunction DistributionStat(props) {\n\treturn (\n\t\t<div className=\"is-size-6\">\n\t\t\t<h3 className=\"is-size-5\">Statistics</h3>\n\t\t\t<p>\n\t\t\t\tAmount count: {props.totalAmount || 0} <br/>\n\t\t\t\tAddress count: {props.totalAddresses || 0} \n\t\t\t</p>\n\t\t</div>\n\t)\n}\n\n\n\nexport default TokenDistributor;"]},"metadata":{},"sourceType":"module"}