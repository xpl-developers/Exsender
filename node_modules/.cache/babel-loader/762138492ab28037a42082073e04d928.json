{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/components/InputField.js\";\nimport React from \"react\";\nexport function SingleInputField(props) {\n  var input = props.input;\n\n  if (input.type == \"radio\" || input.type == \"checkbox\") {\n    return React.createElement(\"label\", {\n      className: input.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: input.type,\n      name: input.name || null,\n      defaultChecked: input.checked || null,\n      id: input.id || null,\n      onChange: input.change || null,\n      onClick: input.click || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }), \"\\xA0 \", input.placeholder);\n  } else if (input.type == \"textarea\") {\n    return React.createElement(\"textarea\", {\n      className: \"textarea\",\n      placeholder: input.placeholder || null,\n      onChange: input.change || null,\n      onBlur: input.blur || null,\n      name: input.name || null,\n      id: input.id || null,\n      defaultValue: input.value || \"\",\n      value: input.value || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  } else if (input.type == \"select\" && input.options) {\n    var options = [];\n\n    if (input.options.length) {\n      options.push(React.createElement(\"option\", {\n        key: \"-1\",\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Select an option \"));\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(input.options), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          options.push(React.createElement(\"option\", {\n            value: option.value,\n            key: option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \" \", option.name, \" \"));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: props.classList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: input.name || null,\n        id: input.id || null,\n        defaultValue: input.value || \"\",\n        onChange: input.change || null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, options)));\n    }\n\n    return null;\n  } else {\n    var _options = [];\n\n    if (input.options && input.list) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(input.options), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _option = _step2.value;\n\n          _options.push(React.createElement(\"option\", {\n            value: _option.value,\n            key: _option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: props.classList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: input.classList || null,\n      type: input.type || \"text\",\n      placeholder: input.placeholder || null,\n      name: input.name || null,\n      onBlur: input.blur || null,\n      onFocus: input.focus || null,\n      onChange: input.change || null,\n      list: input.list || null,\n      id: input.id || null,\n      defaultValue: input.value || \"\",\n      value: input.value || null,\n      disabled: input.disabled || null,\n      readOnly: input.readonly || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), _options.length > 0 && React.createElement(\"datalist\", {\n      id: input.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, _options));\n  }\n}\nexport function MultipleInputFields(props) {\n  var inputFields = props.inputList.map(function (input, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: props.classList || null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(SingleInputField, {\n      input: input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  });\n  return inputFields;\n}","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/components/InputField.js"],"names":["SingleInputField","props","input","type","name","checked","id","change","click","placeholder","blur","value","options","length","push","option","classList","list","focus","disabled","readonly","MultipleInputFields","inputFields","inputList","map","index"],"mappings":"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","sourcesContent":["export function SingleInputField(props) {\n\t\tlet input = props.input;\n\t\tif (input.type == \"radio\" || input.type == \"checkbox\") {\n\t\t\treturn (\n\t\t\t\t<label className={input.type}>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype={input.type}\n\t\t\t\t\t\tname={input.name || null}\n\t\t\t\t\t\tdefaultChecked={input.checked || null}\n\t\t\t\t\t\tid={input.id || null}\n\t\t\t\t\t\tonChange={input.change || null}\n\t\t\t\t\t\tonClick={input.click || null}\n\t\t\t\t\t/>\n\t\t\t\t\t &nbsp; {input.placeholder}\n\t\t\t\t</label>\n\t\t\t)\n\n\t\t} else if (input.type == \"textarea\"){\n\t\t\treturn (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\tplaceholder={input.placeholder || null}\n\t\t\t\t\tonChange={input.change || null}\n\t\t\t\t\tonBlur={input.blur || null}\n\t\t\t\t\tname={input.name || null}\n\t\t\t\t\tid={input.id || null}\n\t\t\t\t\tdefaultValue={input.value || \"\"}\n\t\t\t\t\tvalue={input.value || null}\n\t\t\t\t></textarea>\n\t\t\t)\n\n\n\t\t} else if (input.type == \"select\" && input.options) {\n\t\t\tlet options = [];\n\n\t\t\tif(input.options.length) {\n\t\t\t\toptions.push(<option key=\"-1\" value=\"\" disabled> Select an option </option>);\n\n\t\t\t\tfor( let option of input.options) {\n\t\t\t\t\toptions.push(<option value={option.value} key={option.value}> {option.name} </option>);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className={props.classList}>\n\t\t\t\t\t\t<div className=\"select\">\n\t\t\t\t\t\t\t<select \n\t\t\t\t\t\t\t\tname={input.name || null} \n\t\t\t\t\t\t\t\tid={input.id || null}\n\t\t\t\t\t\t\t\tdefaultValue={input.value || \"\"}\n\t\t\t\t\t\t\t\tonChange={input.change || null}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{options}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null\n\n\t\t} else {\n\t\t\tlet options = [];\n\t\t\tif(input.options && input.list) {\n\t\t\t\tfor( let option of input.options) {\n\t\t\t\t\toptions.push(<option value={option.value} key={option.value} />);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<div className={props.classList}>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName={input.classList || null} \n\t\t\t\t\t\ttype={input.type || \"text\"} \n\t\t\t\t\t\tplaceholder={input.placeholder || null} \n\t\t\t\t\t\tname={input.name || null}\n\t\t\t\t\t\tonBlur={input.blur || null}\n\t\t\t\t\t\tonFocus={input.focus || null}\n\t\t\t\t\t\tonChange={input.change || null}\n\t\t\t\t\t\tlist={input.list || null} \n\t\t\t\t\t\tid={input.id || null} \n\t\t\t\t\t\tdefaultValue={input.value || \"\"} \n\t\t\t\t\t\tvalue={input.value || null}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdisabled={input.disabled || null} \n\t\t\t\t\t\treadOnly={input.readonly || null} \n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\toptions.length > 0 && \n\t\t\t\t\t\t<datalist id={input.list}>{options}</datalist>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n\nexport function MultipleInputFields(props) {\n\tlet inputFields = props.inputList.map((input, index) => {\n\t\treturn (\n\t\t\t<div key={index} className={props.classList || null}>\n\t\t\t\t<SingleInputField\n\t\t\t\t\tinput={input}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t});\n\treturn inputFields;\n}\n"]},"metadata":{},"sourceType":"module"}