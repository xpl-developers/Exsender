{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"/home/abdulhakeem/Express/exsender/pages/token-distributor.js\";\nimport React from \"react\";\nimport Page from '../layouts/Main';\n\nfunction SingleInputField(props) {\n  var input = props.input;\n\n  if (input.type == \"radio\" || input.type == \"checkbox\") {\n    return React.createElement(\"label\", {\n      className: input.type,\n      key: props.key || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: input.type,\n      name: input.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), input.placeholder);\n  } else if (input.type == \"textarea\") {\n    return React.createElement(\"textarea\", {\n      key: props.key || \"\",\n      className: \"textarea\",\n      placeholder: input.placeholder || \"\",\n      name: input.name || \"\",\n      id: input.id || input.name || \"\",\n      defaultValue: input.value || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  } else if (input.type == \"select\" && input.options) {\n    var options = [];\n\n    if (input.options) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(input.options), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          options.push(React.createElement(\"option\", {\n            value: option.value,\n            key: option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \" \", option.name, \" \"));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"select\",\n      defaultValue: input.value,\n      key: props.key || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: input.name || \"\",\n      id: input.id || input.name || \"\",\n      defaultValue: input.value || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, options));\n  } else {\n    var _options = [];\n\n    if (input.options && input.list) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(input.options), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _option = _step2.value;\n\n          _options.push(React.createElement(\"option\", {\n            value: _option.value,\n            key: _option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } //check if there are options\n\n\n    var DataList = \"\";\n\n    if (_options.lenght) {\n      console.log(_options);\n      DataList = React.createElement(\"datalist\", {\n        id: input.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, _options);\n    }\n\n    return React.createElement(\"div\", {\n      key: props.key || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: input.classList || \"\",\n      type: input.type || \"text\",\n      placeholder: input.placeholder || \"\",\n      name: input.name || \"\",\n      list: input.list || \"\",\n      id: input.id || input.name || \"\",\n      defaultValue: input.value || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), DataList);\n  }\n}\n\nfunction MultipleInputFields(props) {\n  var inputFields = props.inputList.map(function (input, index) {\n    return React.createElement(SingleInputField, {\n      input: input,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  });\n  return inputFields;\n}\n\nvar formFields = [{\n  type: 'select',\n  name: \"with-amount\",\n  value: \"apple\",\n  options: [{\n    name: \"orange juicy\",\n    value: \"orange\"\n  }, {\n    name: \"apple juicy\",\n    value: \"apple\"\n  }, {\n    name: \"lemon juicy\",\n    value: \"lemon\"\n  }]\n}, {\n  type: 'text',\n  name: \"with-amount\",\n  list: \"with-amount-list\",\n  value: \"orange\",\n  options: [{\n    name: \"orange juicy\",\n    value: \"orange\"\n  }, {\n    name: \"apple juicy\",\n    value: \"apple\"\n  }, {\n    name: \"lemon juicy\",\n    value: \"lemon\"\n  }]\n}];\n\nvar TokenDistributor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TokenDistributor, _React$Component);\n\n  function TokenDistributor(props) {\n    _classCallCheck(this, TokenDistributor);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TokenDistributor).call(this, props));\n  }\n\n  _createClass(TokenDistributor, [{\n    key: \"alertValue\",\n    value: function alertValue() {\n      alert('hi');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container pl-4 pr-4 mt-4 pt-2 pb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"TokenDistributor\", React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(MultipleInputFields, {\n        inputList: formFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return TokenDistributor;\n}(React.Component);\n\nexport default TokenDistributor;","map":{"version":3,"sources":["/home/abdulhakeem/Express/exsender/pages/token-distributor.js"],"names":["Page","SingleInputField","props","input","type","key","name","placeholder","id","value","options","option","push","list","DataList","lenght","console","log","classList","MultipleInputFields","inputFields","inputList","map","index","formFields","TokenDistributor","alert","React","Component"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,iBAAjB;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;;AACA,MAAIA,KAAK,CAACC,IAAN,IAAc,OAAd,IAAyBD,KAAK,CAACC,IAAN,IAAc,UAA3C,EAAuD;AACtD,WACC;AAAO,MAAA,SAAS,EAAED,KAAK,CAACC,IAAxB;AAA8B,MAAA,GAAG,EAAEF,KAAK,CAACG,GAAN,IAAa,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAEF,KAAK,CAACC,IADb;AAEC,MAAA,IAAI,EAAED,KAAK,CAACG,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAKEH,KAAK,CAACI,WALR,CADD;AAUA,GAXD,MAWO,IAAIJ,KAAK,CAACC,IAAN,IAAc,UAAlB,EAA6B;AACnC,WACE;AACC,MAAA,GAAG,EAAEF,KAAK,CAACG,GAAN,IAAa,EADnB;AAEC,MAAA,SAAS,EAAC,UAFX;AAGC,MAAA,WAAW,EAAEF,KAAK,CAACI,WAAN,IAAqB,EAHnC;AAIC,MAAA,IAAI,EAAEJ,KAAK,CAACG,IAAN,IAAc,EAJrB;AAKC,MAAA,EAAE,EAAEH,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACG,IAAlB,IAA0B,EAL/B;AAMC,MAAA,YAAY,EAAEH,KAAK,CAACM,KAAN,IAAe,EAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYA,GAbM,MAaA,IAAIN,KAAK,CAACC,IAAN,IAAc,QAAd,IAA0BD,KAAK,CAACO,OAApC,EAA6C;AACnD,QAAIA,OAAO,GAAG,EAAd;;AAEA,QAAGP,KAAK,CAACO,OAAT,EAAkB;AAAA;AAAA;AAAA;;AAAA;AACjB,0CAAmBP,KAAK,CAACO,OAAzB,4GAAkC;AAAA,cAAzBC,MAAyB;AACjCD,UAAAA,OAAO,CAACE,IAAR,CAAa;AAAQ,YAAA,KAAK,EAAED,MAAM,CAACF,KAAtB;AAA6B,YAAA,GAAG,EAAEE,MAAM,CAACF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkDE,MAAM,CAACL,IAAzD,MAAb;AACA;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKjB;;AACD,WACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,YAAY,EAAEH,KAAK,CAACM,KAA5C;AAAmD,MAAA,GAAG,EAAEP,KAAK,CAACG,GAAN,IAAa,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,IAAc,EADrB;AAEC,MAAA,EAAE,EAAEH,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACG,IAAlB,IAA0B,EAF/B;AAGC,MAAA,YAAY,EAAEH,KAAK,CAACM,KAAN,IAAe,EAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKEC,OALF,CADD,CADD;AAaA,GAtBM,MAsBA;AACN,QAAIA,QAAO,GAAG,EAAd;;AACA,QAAGP,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACU,IAA1B,EAAgC;AAAA;AAAA;AAAA;;AAAA;AAC/B,2CAAmBV,KAAK,CAACO,OAAzB,iHAAkC;AAAA,cAAzBC,OAAyB;;AACjCD,UAAAA,QAAO,CAACE,IAAR,CAAa;AAAQ,YAAA,KAAK,EAAED,OAAM,CAACF,KAAtB;AAA6B,YAAA,GAAG,EAAEE,OAAM,CAACF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AACA;AAH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK/B,KAPK,CAQN;;;AACA,QAAIK,QAAQ,GAAG,EAAf;;AACA,QAAGJ,QAAO,CAACK,MAAX,EAAkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAI,MAAAA,QAAQ,GAAG;AAAU,QAAA,EAAE,EAAEX,KAAK,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BH,QAA3B,CAAX;AACA;;AAED,WACC;AAAK,MAAA,GAAG,EAAER,KAAK,CAACG,GAAN,IAAa,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,SAAS,EAAEF,KAAK,CAACe,SAAN,IAAmB,EAD/B;AAEC,MAAA,IAAI,EAAEf,KAAK,CAACC,IAAN,IAAc,MAFrB;AAGC,MAAA,WAAW,EAAED,KAAK,CAACI,WAAN,IAAqB,EAHnC;AAIC,MAAA,IAAI,EAAEJ,KAAK,CAACG,IAAN,IAAc,EAJrB;AAKC,MAAA,IAAI,EAAEH,KAAK,CAACU,IAAN,IAAc,EALrB;AAMC,MAAA,EAAE,EAAEV,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACG,IAAlB,IAA0B,EAN/B;AAOC,MAAA,YAAY,EAAEH,KAAK,CAACM,KAAN,IAAe,EAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAUEK,QAVF,CADD;AAcA;AACF;;AAED,SAASK,mBAAT,CAA6BjB,KAA7B,EAAoC;AACnC,MAAIkB,WAAW,GAAGlB,KAAK,CAACmB,SAAN,CAAgBC,GAAhB,CAAoB,UAACnB,KAAD,EAAQoB,KAAR,EAAkB;AACvD,WACC,oBAAC,gBAAD;AACC,MAAA,KAAK,EAAEpB,KADR;AAEC,MAAA,GAAG,EAAEoB,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAMA,GAPiB,CAAlB;AAQA,SAAOH,WAAP;AACA;;AAED,IAAII,UAAU,GAAG,CAChB;AACCpB,EAAAA,IAAI,EAAE,QADP;AAECE,EAAAA,IAAI,EAAC,aAFN;AAGCG,EAAAA,KAAK,EAAE,OAHR;AAICC,EAAAA,OAAO,EAAC,CACN;AACCJ,IAAAA,IAAI,EAAC,cADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GADM,EAKN;AACCH,IAAAA,IAAI,EAAC,aADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GALM,EASN;AACCH,IAAAA,IAAI,EAAC,aADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GATM;AAJT,CADgB,EAoBhB;AACCL,EAAAA,IAAI,EAAE,MADP;AAECE,EAAAA,IAAI,EAAC,aAFN;AAGCO,EAAAA,IAAI,EAAC,kBAHN;AAICJ,EAAAA,KAAK,EAAE,QAJR;AAKCC,EAAAA,OAAO,EAAC,CACN;AACCJ,IAAAA,IAAI,EAAC,cADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GADM,EAKN;AACCH,IAAAA,IAAI,EAAC,aADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GALM,EASN;AACCH,IAAAA,IAAI,EAAC,aADN;AAECG,IAAAA,KAAK,EAAC;AAFP,GATM;AALT,CApBgB,CAAjB;;IA0CMgB,gB;;;;;AACL,4BAAYvB,KAAZ,EAAmB;AAAA;;AAAA,yFACZA,KADY;AAGlB;;;;iCACY;AACZwB,MAAAA,KAAK,CAAC,IAAD,CAAL;AACA;;;6BAEQ;AACR,aAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,mBAAD;AACC,QAAA,SAAS,EAAEF,UADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAFD,CADD,CADD,CAFD;AAeA;;;;EAzB6BG,KAAK,CAACC,S;;AA4BrC,eAAeH,gBAAf","sourcesContent":["import Page from '../layouts/Main';\n\n\nfunction SingleInputField(props) {\n\t\tlet input = props.input;\n\t\tif (input.type == \"radio\" || input.type == \"checkbox\") {\n\t\t\treturn (\n\t\t\t\t<label className={input.type} key={props.key || \"\"}>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype={input.type}\n\t\t\t\t\t\tname={input.name}\n\t\t\t\t\t/>\n\t\t\t\t\t{input.placeholder}\n\t\t\t\t</label>\n\t\t\t)\n\n\t\t} else if (input.type == \"textarea\"){\n\t\t\treturn (\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tkey={props.key || \"\"}\n\t\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\t\tplaceholder={input.placeholder || \"\"}\n\t\t\t\t\t\tname={input.name || \"\"}\n\t\t\t\t\t\tid={input.id || input.name || \"\"}\n\t\t\t\t\t\tdefaultValue={input.value || \"\"}\n\t\t\t\t\t></textarea>\n\t\t\t)\n\n\n\t\t} else if (input.type == \"select\" && input.options) {\n\t\t\tlet options = [];\n\n\t\t\tif(input.options) {\n\t\t\t\tfor( let option of input.options) {\n\t\t\t\t\toptions.push(<option value={option.value} key={option.value}> {option.name} </option>);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div className=\"select\" defaultValue={input.value} key={props.key || \"\"}>\n\t\t\t\t\t<select \n\t\t\t\t\t\tname={input.name || \"\"} \n\t\t\t\t\t\tid={input.id || input.name || \"\"} \n\t\t\t\t\t\tdefaultValue={input.value || \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t{options}\n\t\t\t\t\t\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else {\n\t\t\tlet options = [];\n\t\t\tif(input.options && input.list) {\n\t\t\t\tfor( let option of input.options) {\n\t\t\t\t\toptions.push(<option value={option.value} key={option.value} />);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//check if there are options\n\t\t\tlet DataList = \"\";\n\t\t\tif(options.lenght){\n\t\t\t\tconsole.log(options)\n\t\t\t\tDataList = <datalist id={input.list}>{options}</datalist>;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div key={props.key || \"\"}>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName={input.classList || \"\"} \n\t\t\t\t\t\ttype={input.type || \"text\"} \n\t\t\t\t\t\tplaceholder={input.placeholder || \"\"} \n\t\t\t\t\t\tname={input.name || \"\"} \n\t\t\t\t\t\tlist={input.list || \"\"} \n\t\t\t\t\t\tid={input.id || input.name || \"\"} \n\t\t\t\t\t\tdefaultValue={input.value || \"\"} \n\t\t\t\t\t/>\n\t\t\t\t\t{DataList}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n\nfunction MultipleInputFields(props) {\n\tlet inputFields = props.inputList.map((input, index) => {\n\t\treturn (\n\t\t\t<SingleInputField\n\t\t\t\tinput={input}\n\t\t\t\tkey={index}\n\t\t\t/>\n\t\t)\n\t});\n\treturn inputFields;\n}\n\nlet formFields = [\n\t{\n\t\ttype: 'select', \n\t\tname:\"with-amount\", \n\t\tvalue: \"apple\",\n\t\toptions:[\n\t\t\t\t{\n\t\t\t\t\tname:\"orange juicy\",\n\t\t\t\t\tvalue:\"orange\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname:\"apple juicy\",\n\t\t\t\t\tvalue:\"apple\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname:\"lemon juicy\",\n\t\t\t\t\tvalue:\"lemon\"\n\t\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttype: 'text', \n\t\tname:\"with-amount\", \n\t\tlist:\"with-amount-list\", \n\t\tvalue: \"orange\",\n\t\toptions:[\n\t\t\t\t{\n\t\t\t\t\tname:\"orange juicy\",\n\t\t\t\t\tvalue:\"orange\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname:\"apple juicy\",\n\t\t\t\t\tvalue:\"apple\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname:\"lemon juicy\",\n\t\t\t\t\tvalue:\"lemon\"\n\t\t\t\t}\n\t\t]\n\t}\n]\n\nclass TokenDistributor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t}\n\talertValue() {\n\t\talert('hi');\n\t}\n\n\trender() {\n\t\treturn (\n\n\t\t\t<Page>\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"container pl-4 pr-4 mt-4 pt-2 pb-2\">\n\t\t\t\t\t\tTokenDistributor\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<MultipleInputFields \n\t\t\t\t\t\t\t\tinputList={formFields}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</Page>\t\n\t\t)\n\t}\n}\n\nexport default TokenDistributor;"]},"metadata":{},"sourceType":"module"}